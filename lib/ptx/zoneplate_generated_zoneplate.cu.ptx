//
// Generated by NVIDIA NVVM Compiler
// Compiler built on Wed Jul 10 15:41:20 2013 (1373485280)
// Cuda compilation tools, release 5.5, V5.5.0
//

.version 3.2
.target sm_20
.address_size 32

	.file	1 "C:/Program Files (x86)/NVIDIA Corporation/OptiX SDK 3.0.1/SDK/zoneplate/zoneplate.cu", 1347546938, 10278
	.file	2 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\device_functions.h", 1373544392, 191626
	.file	3 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\math_functions.h", 1373544392, 404374
	.file	4 "c:\\program files (x86)\\nvidia corporation\\optix sdk 3.0.1\\include\\optix_device.h", 1352751958, 55211
	.file	5 "c:\\program files (x86)\\nvidia corporation\\optix sdk 3.0.1\\include\\internal/optix_internal.h", 1352751956, 13779
	.file	6 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v5.5\\include\\sm_20_atomic_functions.h", 1373544392, 3990
.global .align 4 .b8 ray[36];
.global .align 1 .b8 output_color_only[1];
.global .align 1 .b8 adaptive_sample_locations[1];
.global .align 1 .b8 output_samples[1];
.global .align 1 .b8 filter_weights[1];
.global .align 1 .b8 weighted_scatter_sums[1];
.global .align 8 .b8 launch_index[8];
.global .align 8 .b8 window_size[8];
.global .align 4 .u32 filter_type;
.global .align 4 .u32 render_type;
.global .align 4 .f32 filter_width;
.global .align 4 .f32 checkerboard_rotate;
.global .align 4 .u32 checkerboard_width;
.global .align 4 .u32 sqrt_samples_per_pixel;
.global .align 4 .f32 gaussian_alpha;
.global .align 4 .f32 jitter_amount;
.global .align 4 .f32 sinc_tau;
.global .align 4 .u32 contrast_window_width;
.global .align 4 .f32 adaptive_contrast_threshold;
.global .align 4 .u32 _ZN21rti_internal_register20reg_bitness_detectorE;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;
.global .align 4 .b8 _ZN21rti_internal_typeinfo3rayE[8] = {82, 97, 121, 0, 36, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12launch_indexE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo11window_sizeE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo11filter_typeE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo11render_typeE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12filter_widthE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo19checkerboard_rotateE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo18checkerboard_widthE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo22sqrt_samples_per_pixelE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo14gaussian_alphaE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo13jitter_amountE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8sinc_tauE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo21contrast_window_widthE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo27adaptive_contrast_thresholdE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 1 .b8 _ZN21rti_internal_typename3rayE[11] = {111, 112, 116, 105, 120, 58, 58, 82, 97, 121, 0};
.global .align 1 .b8 _ZN21rti_internal_typename12launch_indexE[6] = {117, 105, 110, 116, 50, 0};
.global .align 1 .b8 _ZN21rti_internal_typename11window_sizeE[6] = {117, 105, 110, 116, 50, 0};
.global .align 1 .b8 _ZN21rti_internal_typename11filter_typeE[4] = {105, 110, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename11render_typeE[4] = {105, 110, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename12filter_widthE[6] = {102, 108, 111, 97, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename19checkerboard_rotateE[6] = {102, 108, 111, 97, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename18checkerboard_widthE[4] = {105, 110, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename22sqrt_samples_per_pixelE[5] = {117, 105, 110, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename14gaussian_alphaE[6] = {102, 108, 111, 97, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename13jitter_amountE[6] = {102, 108, 111, 97, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename8sinc_tauE[6] = {102, 108, 111, 97, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename21contrast_window_widthE[5] = {117, 105, 110, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename27adaptive_contrast_thresholdE[6] = {102, 108, 111, 97, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic3rayE[13] = {114, 116, 67, 117, 114, 114, 101, 110, 116, 82, 97, 121, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic12launch_indexE[14] = {114, 116, 76, 97, 117, 110, 99, 104, 73, 110, 100, 101, 120, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic11window_sizeE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic11filter_typeE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic11render_typeE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12filter_widthE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic19checkerboard_rotateE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic18checkerboard_widthE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic22sqrt_samples_per_pixelE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic14gaussian_alphaE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic13jitter_amountE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8sinc_tauE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic21contrast_window_widthE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic27adaptive_contrast_thresholdE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation3rayE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12launch_indexE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation11window_sizeE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation11filter_typeE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation11render_typeE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12filter_widthE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation19checkerboard_rotateE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation18checkerboard_widthE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation22sqrt_samples_per_pixelE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation14gaussian_alphaE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation13jitter_amountE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8sinc_tauE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation21contrast_window_widthE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation27adaptive_contrast_thresholdE[1];
.global .align 1 .b8 $str[47] = {67, 97, 117, 103, 104, 116, 32, 101, 120, 99, 101, 112, 116, 105, 111, 110, 32, 48, 120, 37, 88, 32, 97, 116, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 40, 37, 100, 44, 37, 100, 41, 10, 0};
.global .align 1 .b8 $str1[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90, 0};

.visible .entry _Z13zp_color_onlyv(

)
{
	.reg .pred 	%p<4>;
	.reg .s16 	%rs<3>;
	.reg .s32 	%r<34>;
	.reg .f32 	%f<40>;


	.loc 1 82 1
	ldu.global.v2.u32 	{%r2, %r3}, [launch_index];
	cvt.rn.f32.u32	%f6, %r2;
	add.ftz.f32 	%f1, %f6, 0f3F000000;
	cvt.rn.f32.u32	%f7, %r3;
	add.ftz.f32 	%f2, %f7, 0f3F000000;
	.loc 1 72 1
	ldu.global.u32 	%r1, [render_type];
	setp.eq.s32	%p1, %r1, 0;
	@%p1 bra 	BB0_4;

	.loc 1 74 1
	setp.eq.s32	%p2, %r1, 1;
	@%p2 bra 	BB0_3;

	mov.f32 	%f39, 0f00000000;
	bra.uni 	BB0_5;

BB0_3:
	.loc 1 61 1
	ldu.global.f32 	%f9, [checkerboard_rotate];
	mul.ftz.f32 	%f10, %f9, 0f40490FDB;
	mov.f32 	%f11, 0f43340000;
	.loc 2 3606 10
	div.approx.ftz.f32 	%f12, %f10, %f11;
	.loc 3 8366 10
	cos.approx.ftz.f32 	%f13, %f12;
	.loc 3 8357 10
	sin.approx.ftz.f32 	%f14, %f12;
	.loc 1 63 1
	mul.ftz.f32 	%f15, %f14, %f2;
	fma.rn.ftz.f32 	%f16, %f13, %f1, %f15;
	ldu.global.u32 	%r6, [checkerboard_width];
	cvt.rn.f32.s32	%f17, %r6;
	.loc 2 3606 10
	div.approx.ftz.f32 	%f18, %f16, %f17;
	.loc 2 2740 10
	cvt.rmi.ftz.f32.f32	%f19, %f18;
	.loc 2 3251 10
	cvt.rzi.ftz.s32.f32	%r7, %f19;
	.loc 2 2716 10
	abs.s32 	%r8, %r7;
	.loc 1 64 1
	mul.ftz.f32 	%f20, %f13, %f2;
	mul.ftz.f32 	%f21, %f14, %f1;
	sub.ftz.f32 	%f22, %f20, %f21;
	.loc 2 3606 10
	div.approx.ftz.f32 	%f23, %f22, %f17;
	.loc 2 2740 10
	cvt.rmi.ftz.f32.f32	%f24, %f23;
	.loc 2 3251 10
	cvt.rzi.ftz.s32.f32	%r9, %f24;
	.loc 2 2716 10
	abs.s32 	%r10, %r9;
	.loc 1 66 1
	shr.u32 	%r11, %r8, 31;
	add.s32 	%r12, %r8, %r11;
	and.b32  	%r13, %r12, -2;
	sub.s32 	%r14, %r8, %r13;
	shr.u32 	%r15, %r10, 31;
	add.s32 	%r16, %r10, %r15;
	and.b32  	%r17, %r16, -2;
	sub.s32 	%r18, %r10, %r17;
	setp.eq.s32	%p3, %r14, %r18;
	selp.f32	%f39, 0f3F800000, 0f00000000, %p3;
	bra.uni 	BB0_5;

BB0_4:
	.loc 1 52 1
	ld.global.v2.u32 	{%r19, %r20}, [window_size];
	.loc 1 53 1
	cvt.rn.f32.u32	%f25, %r19;
	cvt.rn.f32.u32	%f26, %r20;
	.loc 2 3606 10
	div.approx.ftz.f32 	%f27, %f1, %f25;
	div.approx.ftz.f32 	%f28, %f2, %f26;
	.loc 1 54 1
	mul.ftz.f32 	%f29, %f28, %f28;
	fma.rn.ftz.f32 	%f30, %f27, %f27, %f29;
	.loc 2 3055 10
	sqrt.approx.ftz.f32 	%f31, %f30;
	.loc 1 55 1
	mul.ftz.f32 	%f32, %f31, 0f44FA0000;
	mul.ftz.f32 	%f33, %f32, %f31;
	.loc 3 8366 10
	cos.approx.ftz.f32 	%f34, %f33;
	.loc 1 55 152
	add.ftz.f32 	%f35, %f34, 0f3F800000;
	mov.f32 	%f36, 0f40000000;
	.loc 2 3606 10
	div.approx.ftz.f32 	%f39, %f35, %f36;

BB0_5:
	mov.u32 	%r26, 4;
	.loc 1 83 1
	cvta.global.u32 	%r24, output_color_only;
	mov.u32 	%r25, 2;
	mov.u32 	%r30, 0;
	.loc 1 83 1
	ld.global.v2.u32 	{%r31, %r32}, [launch_index];
	.loc 5 120 1
	// inline asm
	call (%r23), _rt_buffer_get, (%r24, %r25, %r26, %r31, %r32, %r30, %r30);
	// inline asm
	.loc 2 2820 10
	cvt.ftz.sat.f32.f32	%f37, %f39;
	mul.ftz.f32 	%f38, %f37, 0f437FFD71;
	.loc 2 3272 10
	cvt.rzi.ftz.u32.f32	%r33, %f38;
	cvt.u16.u32	%rs1, %r33;
	mov.u16 	%rs2, 255;
	st.v4.u8 	[%r23], {%rs1, %rs1, %rs1, %rs2};
	.loc 1 84 2
	ret;
}

.visible .entry _Z19zp_generate_samplesv(

)
{
	.reg .pred 	%p<4>;
	.reg .s32 	%r<51>;
	.reg .f32 	%f<41>;


	.loc 1 96 1
	ld.global.v2.u32 	{%r19, %r20}, [launch_index];
	.loc 1 88 1
	cvt.rn.f32.u32	%f6, %r19;
	add.ftz.f32 	%f7, %f6, 0f3F000000;
	ldu.global.u32 	%r21, [sqrt_samples_per_pixel];
	cvt.rn.f32.u32	%f8, %r21;
	.loc 2 3606 10
	div.approx.ftz.f32 	%f1, %f7, %f8;
	.loc 1 88 65
	cvt.rn.f32.u32	%f9, %r20;
	add.ftz.f32 	%f10, %f9, 0f3F000000;
	.loc 2 3606 10
	div.approx.ftz.f32 	%f2, %f10, %f8;
	.loc 1 97 1
	cvta.global.u32 	%r12, output_samples;
	mov.u32 	%r13, 2;
	mov.u32 	%r14, 12;
	mov.u32 	%r18, 0;
	.loc 5 120 1
	// inline asm
	call (%r3), _rt_buffer_get, (%r12, %r13, %r14, %r19, %r20, %r18, %r18);
	// inline asm
	.loc 1 97 3
	st.f32 	[%r3+4], %f1;
	.loc 1 98 1
	ld.global.v2.u32 	{%r22, %r23}, [launch_index];
	.loc 5 120 1
	// inline asm
	call (%r11), _rt_buffer_get, (%r12, %r13, %r14, %r22, %r23, %r18, %r18);
	// inline asm
	.loc 1 98 3
	st.f32 	[%r11+8], %f2;
	.loc 1 72 1
	ld.global.u32 	%r2, [render_type];
	setp.eq.s32	%p1, %r2, 0;
	@%p1 bra 	BB1_4;

	.loc 1 74 1
	setp.eq.s32	%p2, %r2, 1;
	@%p2 bra 	BB1_3;

	mov.f32 	%f40, 0f00000000;
	bra.uni 	BB1_5;

BB1_3:
	.loc 1 61 1
	ld.global.f32 	%f12, [checkerboard_rotate];
	mul.ftz.f32 	%f13, %f12, 0f40490FDB;
	mov.f32 	%f14, 0f43340000;
	.loc 2 3606 10
	div.approx.ftz.f32 	%f15, %f13, %f14;
	.loc 3 8366 10
	cos.approx.ftz.f32 	%f16, %f15;
	.loc 3 8357 10
	sin.approx.ftz.f32 	%f17, %f15;
	.loc 1 63 1
	mul.ftz.f32 	%f18, %f17, %f2;
	fma.rn.ftz.f32 	%f19, %f16, %f1, %f18;
	ld.global.u32 	%r24, [checkerboard_width];
	cvt.rn.f32.s32	%f20, %r24;
	.loc 2 3606 10
	div.approx.ftz.f32 	%f21, %f19, %f20;
	.loc 2 2740 10
	cvt.rmi.ftz.f32.f32	%f22, %f21;
	.loc 2 3251 10
	cvt.rzi.ftz.s32.f32	%r25, %f22;
	.loc 2 2716 10
	abs.s32 	%r26, %r25;
	.loc 1 64 1
	mul.ftz.f32 	%f23, %f16, %f2;
	mul.ftz.f32 	%f24, %f17, %f1;
	sub.ftz.f32 	%f25, %f23, %f24;
	.loc 2 3606 10
	div.approx.ftz.f32 	%f26, %f25, %f20;
	.loc 2 2740 10
	cvt.rmi.ftz.f32.f32	%f27, %f26;
	.loc 2 3251 10
	cvt.rzi.ftz.s32.f32	%r27, %f27;
	.loc 2 2716 10
	abs.s32 	%r28, %r27;
	.loc 1 66 1
	shr.u32 	%r29, %r26, 31;
	add.s32 	%r30, %r26, %r29;
	and.b32  	%r31, %r30, -2;
	sub.s32 	%r32, %r26, %r31;
	shr.u32 	%r33, %r28, 31;
	add.s32 	%r34, %r28, %r33;
	and.b32  	%r35, %r34, -2;
	sub.s32 	%r36, %r28, %r35;
	setp.eq.s32	%p3, %r32, %r36;
	selp.f32	%f40, 0f3F800000, 0f00000000, %p3;
	bra.uni 	BB1_5;

BB1_4:
	.loc 1 52 1
	ld.global.v2.u32 	{%r37, %r38}, [window_size];
	.loc 1 53 1
	cvt.rn.f32.u32	%f28, %r37;
	cvt.rn.f32.u32	%f29, %r38;
	.loc 2 3606 10
	div.approx.ftz.f32 	%f30, %f1, %f28;
	div.approx.ftz.f32 	%f31, %f2, %f29;
	.loc 1 54 1
	mul.ftz.f32 	%f32, %f31, %f31;
	fma.rn.ftz.f32 	%f33, %f30, %f30, %f32;
	.loc 2 3055 10
	sqrt.approx.ftz.f32 	%f34, %f33;
	.loc 1 55 1
	mul.ftz.f32 	%f35, %f34, 0f44FA0000;
	mul.ftz.f32 	%f36, %f35, %f34;
	.loc 3 8366 10
	cos.approx.ftz.f32 	%f37, %f36;
	.loc 1 55 152
	add.ftz.f32 	%f38, %f37, 0f3F800000;
	mov.f32 	%f39, 0f40000000;
	.loc 2 3606 10
	div.approx.ftz.f32 	%f40, %f38, %f39;

BB1_5:
	.loc 1 99 89
	ld.global.v2.u32 	{%r49, %r50}, [launch_index];
	.loc 5 120 1
	// inline asm
	call (%r41), _rt_buffer_get, (%r12, %r13, %r14, %r49, %r50, %r18, %r18);
	// inline asm
	.loc 1 99 3
	st.f32 	[%r41], %f40;
	.loc 1 100 2
	ret;
}

.visible .entry _Z17zp_gather_samplesv(

)
{
	.reg .pred 	%p<19>;
	.reg .s16 	%rs<3>;
	.reg .s32 	%r<76>;
	.reg .f32 	%f<173>;
	.reg .s64 	%rd<3>;


	.loc 1 159 1
	ldu.global.u32 	%r73, [sqrt_samples_per_pixel];
	cvt.rn.f32.u32	%f37, %r73;
	ldu.global.v2.u32 	{%r20, %r21}, [launch_index];
	cvt.rn.f32.u32	%f38, %r20;
	add.ftz.f32 	%f39, %f38, 0f3F000000;
	ldu.global.f32 	%f166, [filter_width];
	sub.ftz.f32 	%f40, %f39, %f166;
	mul.ftz.f32 	%f41, %f37, %f40;
	.loc 2 2740 10
	cvt.rmi.ftz.f32.f32	%f42, %f41;
	.loc 2 3251 10
	cvt.rzi.ftz.s32.f32	%r23, %f42;
	mov.u32 	%r24, 0;
	.loc 2 2642 10
	max.s32 	%r2, %r23, %r24;
	.loc 1 160 1
	add.ftz.f32 	%f43, %f39, %f166;
	mul.ftz.f32 	%f44, %f37, %f43;
	.loc 2 2815 10
	cvt.rpi.ftz.f32.f32	%f45, %f44;
	.loc 2 3251 10
	cvt.rzi.ftz.s32.f32	%r25, %f45;
	.loc 1 160 66
	ldu.global.u64 	%rd1, [window_size];
	cvt.u32.u64	%r26, %rd1;
	mad.lo.s32 	%r27, %r26, %r73, -1;
	.loc 2 2626 10
	min.u32 	%r74, %r25, %r27;
	.loc 1 159 1
	mov.u32 	%r72, %r21;
	.loc 1 161 1
	cvt.rn.f32.u32	%f46, %r21;
	add.ftz.f32 	%f47, %f46, 0f3F000000;
	sub.ftz.f32 	%f48, %f47, %f166;
	mul.ftz.f32 	%f49, %f37, %f48;
	.loc 2 2740 10
	cvt.rmi.ftz.f32.f32	%f50, %f49;
	.loc 2 3251 10
	cvt.rzi.ftz.s32.f32	%r28, %f50;
	.loc 2 2642 10
	max.s32 	%r5, %r28, %r24;
	shr.u64 	%rd2, %rd1, 32;
	cvt.u32.u64	%r71, %rd2;
	mov.f32 	%f172, 0f00000000;
	.loc 1 166 1
	setp.ne.s32	%p1, %r74, %r2;
	@%p1 bra 	BB2_3;

	mov.f32 	%f171, %f172;

BB2_2:
	mov.u32 	%r63, 4;
	.loc 1 177 1
	cvta.global.u32 	%r61, output_color_only;
	mov.u32 	%r62, 2;
	.loc 1 177 1
	ld.global.v2.u32 	{%r68, %r69}, [launch_index];
	.loc 5 120 1
	// inline asm
	call (%r60), _rt_buffer_get, (%r61, %r62, %r63, %r68, %r69, %r24, %r24);
	// inline asm
	.loc 2 3606 10
	div.approx.ftz.f32 	%f156, %f172, %f171;
	.loc 2 2820 10
	cvt.ftz.sat.f32.f32	%f157, %f156;
	mul.ftz.f32 	%f158, %f157, 0f437FFD71;
	.loc 2 3272 10
	cvt.rzi.ftz.u32.f32	%r70, %f158;
	cvt.u16.u32	%rs1, %r70;
	mov.u16 	%rs2, 255;
	st.v4.u8 	[%r60], {%rs1, %rs1, %rs1, %rs2};
	.loc 1 178 2
	ret;

BB2_3:
	mov.f32 	%f171, %f172;

BB2_4:
	.loc 1 166 1
	mov.u32 	%r9, %r73;
	mov.u32 	%r8, %r72;
	mov.f32 	%f2, %f166;
	mov.u32 	%r7, %r71;
	add.s32 	%r74, %r74, -1;
	.loc 1 167 1
	cvt.rn.f32.u32	%f53, %r8;
	add.ftz.f32 	%f54, %f53, 0f3F000000;
	add.ftz.f32 	%f55, %f54, %f2;
	cvt.rn.f32.u32	%f56, %r9;
	mul.ftz.f32 	%f57, %f56, %f55;
	.loc 2 2815 10
	cvt.rpi.ftz.f32.f32	%f58, %f57;
	.loc 2 3251 10
	cvt.rzi.ftz.s32.f32	%r29, %f58;
	.loc 1 167 66
	mad.lo.s32 	%r30, %r7, %r9, -1;
	.loc 2 2626 10
	min.u32 	%r12, %r29, %r30;
	.loc 1 169 1
	setp.eq.s32	%p2, %r12, %r5;
	@%p2 bra 	BB2_33;

	add.s32 	%r75, %r12, -1;

BB2_6:
	.loc 1 171 1
	cvta.global.u32 	%r40, output_samples;
	mov.u32 	%r41, 2;
	mov.u32 	%r42, 12;
	.loc 5 120 1
	// inline asm
	call (%r31), _rt_buffer_get, (%r40, %r41, %r42, %r74, %r75, %r24, %r24);
	// inline asm
	.loc 1 171 163
	ld.f32 	%f59, [%r31+4];
	.loc 5 120 1
	// inline asm
	call (%r39), _rt_buffer_get, (%r40, %r41, %r42, %r74, %r75, %r24, %r24);
	// inline asm
	ld.global.v2.u32 	{%r47, %r48}, [launch_index];
	.loc 1 130 1
	cvt.rn.f32.u32	%f60, %r47;
	add.ftz.f32 	%f61, %f60, 0f3F000000;
	sub.ftz.f32 	%f62, %f59, %f61;
	.loc 2 2750 10
	abs.ftz.f32 	%f7, %f62;
	.loc 1 131 1
	cvt.rn.f32.u32	%f63, %r48;
	add.ftz.f32 	%f64, %f63, 0f3F000000;
	ld.f32 	%f65, [%r39+8];
	.loc 1 131 1
	sub.ftz.f32 	%f66, %f65, %f64;
	.loc 2 2750 10
	abs.ftz.f32 	%f8, %f66;
	.loc 1 133 1
	ld.global.f32 	%f9, [filter_width];
	setp.gt.ftz.f32	%p3, %f7, %f9;
	setp.gt.ftz.f32	%p4, %f8, %f9;
	or.pred  	%p5, %p3, %p4;
	@!%p5 bra 	BB2_8;
	bra.uni 	BB2_7;

BB2_7:
	mov.f32 	%f170, 0f00000000;
	bra.uni 	BB2_32;

BB2_8:
	.loc 1 137 1
	ld.global.u32 	%r15, [filter_type];
	setp.ne.s32	%p6, %r15, 0;
	.loc 1 151 1
	mov.f32 	%f170, 0f3F800000;
	.loc 1 137 1
	@%p6 bra 	BB2_9;
	bra.uni 	BB2_32;

BB2_9:
	setp.eq.s32	%p7, %r15, 1;
	@%p7 bra 	BB2_31;

	setp.eq.s32	%p8, %r15, 2;
	@%p8 bra 	BB2_30;

	setp.eq.s32	%p9, %r15, 3;
	@%p9 bra 	BB2_23;

	setp.eq.s32	%p10, %r15, 4;
	@%p10 bra 	BB2_13;
	bra.uni 	BB2_32;

BB2_13:
	.loc 2 3606 10
	div.approx.ftz.f32 	%f10, %f7, %f9;
	.loc 1 117 1
	setp.geu.ftz.f32	%p11, %f10, 0f3727C5AC;
	@%p11 bra 	BB2_15;

	mov.f32 	%f167, 0f3F800000;
	bra.uni 	BB2_18;

BB2_15:
	.loc 1 118 1
	setp.leu.ftz.f32	%p12, %f10, 0f3F800000;
	@%p12 bra 	BB2_17;

	mov.f32 	%f167, 0f00000000;
	bra.uni 	BB2_18;

BB2_17:
	.loc 1 119 1
	mul.ftz.f32 	%f68, %f10, 0f40490FDB;
	.loc 1 120 1
	ld.global.f32 	%f69, [sinc_tau];
	mul.ftz.f32 	%f70, %f68, %f69;
	.loc 3 8357 10
	sin.approx.ftz.f32 	%f71, %f70;
	.loc 2 3606 10
	div.approx.ftz.f32 	%f72, %f71, %f70;
	.loc 3 8357 10
	sin.approx.ftz.f32 	%f73, %f68;
	.loc 2 3606 10
	div.approx.ftz.f32 	%f74, %f73, %f68;
	.loc 1 122 1
	mul.ftz.f32 	%f167, %f72, %f74;

BB2_18:
	.loc 2 3606 10
	div.approx.ftz.f32 	%f13, %f8, %f9;
	.loc 1 117 1
	setp.geu.ftz.f32	%p13, %f13, 0f3727C5AC;
	@%p13 bra 	BB2_20;

	mov.f32 	%f85, 0f3F800000;
	.loc 1 148 189
	mul.ftz.f32 	%f170, %f167, %f85;
	bra.uni 	BB2_32;

BB2_20:
	.loc 1 118 1
	setp.leu.ftz.f32	%p14, %f13, 0f3F800000;
	@%p14 bra 	BB2_22;

	mov.f32 	%f84, 0f00000000;
	.loc 1 148 189
	mul.ftz.f32 	%f170, %f167, %f84;
	bra.uni 	BB2_32;

BB2_22:
	.loc 1 119 1
	mul.ftz.f32 	%f77, %f13, 0f40490FDB;
	.loc 1 120 1
	ld.global.f32 	%f78, [sinc_tau];
	mul.ftz.f32 	%f79, %f77, %f78;
	.loc 3 8357 10
	sin.approx.ftz.f32 	%f80, %f79;
	.loc 2 3606 10
	div.approx.ftz.f32 	%f81, %f80, %f79;
	.loc 3 8357 10
	sin.approx.ftz.f32 	%f82, %f77;
	.loc 2 3606 10
	div.approx.ftz.f32 	%f83, %f82, %f77;
	.loc 1 122 1
	mul.ftz.f32 	%f14, %f81, %f83;
	.loc 1 148 189
	mul.ftz.f32 	%f170, %f167, %f14;
	bra.uni 	BB2_32;

BB2_23:
	.loc 2 3606 10
	div.approx.ftz.f32 	%f17, %f7, %f9;
	.loc 1 107 1
	setp.gt.ftz.f32	%p15, %f17, 0f3F800000;
	@%p15 bra 	BB2_25;

	mov.f32 	%f86, 0f41400000;
	.loc 1 111 1
	sub.ftz.f32 	%f87, %f86, 0f40400000;
	add.ftz.f32 	%f88, %f87, 0fC0000000;
	mul.ftz.f32 	%f89, %f88, %f17;
	mul.ftz.f32 	%f90, %f89, %f17;
	mul.ftz.f32 	%f91, %f17, 0fC1400000;
	mul.ftz.f32 	%f92, %f91, %f17;
	fma.rn.ftz.f32 	%f93, %f90, %f17, %f92;
	mov.f32 	%f94, 0f40C00000;
	.loc 1 111 1
	sub.ftz.f32 	%f95, %f94, 0f3F2AAAAB;
	add.ftz.f32 	%f168, %f93, %f95;
	bra.uni 	BB2_26;

BB2_25:
	mov.f32 	%f96, 0fBEAAAAAB;
	.loc 1 108 1
	sub.ftz.f32 	%f97, %f96, 0f40000000;
	mul.ftz.f32 	%f98, %f97, %f17;
	mul.ftz.f32 	%f99, %f98, %f17;
	mul.ftz.f32 	%f100, %f17, 0f41400000;
	mul.ftz.f32 	%f101, %f100, %f17;
	fma.rn.ftz.f32 	%f102, %f99, %f17, %f101;
	mov.f32 	%f103, 0fC0800000;
	.loc 1 108 1
	sub.ftz.f32 	%f104, %f103, 0f41800000;
	fma.rn.ftz.f32 	%f105, %f104, %f17, %f102;
	add.ftz.f32 	%f168, %f105, 0f412AAAAB;

BB2_26:
	.loc 1 111 1
	mul.ftz.f32 	%f21, %f168, 0f3E2AAAAB;
	.loc 2 3606 10
	div.approx.ftz.f32 	%f22, %f8, %f9;
	.loc 1 107 1
	setp.gt.ftz.f32	%p16, %f22, 0f3F800000;
	@%p16 bra 	BB2_28;

	mov.f32 	%f106, 0f41400000;
	.loc 1 111 1
	sub.ftz.f32 	%f107, %f106, 0f40400000;
	add.ftz.f32 	%f108, %f107, 0fC0000000;
	mul.ftz.f32 	%f109, %f108, %f22;
	mul.ftz.f32 	%f110, %f109, %f22;
	mul.ftz.f32 	%f111, %f22, 0fC1400000;
	mul.ftz.f32 	%f112, %f111, %f22;
	fma.rn.ftz.f32 	%f113, %f110, %f22, %f112;
	mov.f32 	%f114, 0f40C00000;
	.loc 1 111 1
	sub.ftz.f32 	%f115, %f114, 0f3F2AAAAB;
	add.ftz.f32 	%f169, %f113, %f115;
	bra.uni 	BB2_29;

BB2_28:
	mov.f32 	%f116, 0fBEAAAAAB;
	.loc 1 108 1
	sub.ftz.f32 	%f117, %f116, 0f40000000;
	mul.ftz.f32 	%f118, %f117, %f22;
	mul.ftz.f32 	%f119, %f118, %f22;
	mul.ftz.f32 	%f120, %f22, 0f41400000;
	mul.ftz.f32 	%f121, %f120, %f22;
	fma.rn.ftz.f32 	%f122, %f119, %f22, %f121;
	mov.f32 	%f123, 0fC0800000;
	.loc 1 108 1
	sub.ftz.f32 	%f124, %f123, 0f41800000;
	fma.rn.ftz.f32 	%f125, %f124, %f22, %f122;
	add.ftz.f32 	%f169, %f125, 0f412AAAAB;

BB2_29:
	.loc 1 111 1
	mul.ftz.f32 	%f126, %f169, 0f3E2AAAAB;
	.loc 1 146 194
	mul.ftz.f32 	%f170, %f21, %f126;
	bra.uni 	BB2_32;

BB2_30:
	.loc 1 143 1
	ld.global.f32 	%f127, [gaussian_alpha];
	neg.ftz.f32 	%f128, %f127;
	mul.ftz.f32 	%f129, %f9, %f128;
	mul.ftz.f32 	%f130, %f129, %f9;
	.loc 3 8417 10
	mul.ftz.f32 	%f131, %f130, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f132, %f131;
	.loc 1 144 1
	mul.ftz.f32 	%f133, %f7, %f128;
	mul.ftz.f32 	%f134, %f133, %f7;
	.loc 3 8417 10
	mul.ftz.f32 	%f135, %f134, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f136, %f135;
	.loc 1 144 21
	sub.ftz.f32 	%f137, %f136, %f132;
	mov.f32 	%f138, 0f00000000;
	.loc 2 2770 10
	max.ftz.f32 	%f139, %f138, %f137;
	.loc 1 144 188
	mul.ftz.f32 	%f140, %f8, %f128;
	mul.ftz.f32 	%f141, %f140, %f8;
	.loc 3 8417 10
	mul.ftz.f32 	%f142, %f141, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f143, %f142;
	.loc 1 144 227
	sub.ftz.f32 	%f144, %f143, %f132;
	.loc 2 2770 10
	max.ftz.f32 	%f145, %f138, %f144;
	mul.ftz.f32 	%f170, %f139, %f145;
	bra.uni 	BB2_32;

BB2_31:
	.loc 1 141 1
	sub.ftz.f32 	%f146, %f9, %f7;
	mov.f32 	%f147, 0f00000000;
	.loc 2 2770 10
	max.ftz.f32 	%f148, %f147, %f146;
	.loc 1 141 79
	sub.ftz.f32 	%f149, %f9, %f8;
	.loc 2 2770 10
	max.ftz.f32 	%f150, %f147, %f149;
	.loc 1 141 176
	mul.ftz.f32 	%f170, %f148, %f150;

BB2_32:
	.loc 5 120 1
	// inline asm
	call (%r51), _rt_buffer_get, (%r40, %r41, %r42, %r74, %r75, %r24, %r24);
	// inline asm
	.loc 1 172 91
	ld.f32 	%f153, [%r51];
	fma.rn.ftz.f32 	%f172, %f170, %f153, %f172;
	.loc 1 173 1
	add.ftz.f32 	%f171, %f171, %f170;
	.loc 1 169 1
	add.s32 	%r75, %r75, -1;
	sub.s32 	%r59, %r75, %r5;
	setp.ne.s32	%p17, %r59, -1;
	@%p17 bra 	BB2_6;

BB2_33:
	.loc 1 166 1
	setp.eq.s32	%p18, %r74, %r2;
	@%p18 bra 	BB2_2;

	.loc 1 167 1
	ld.global.u32 	%r73, [sqrt_samples_per_pixel];
	ld.global.u32 	%r72, [launch_index+4];
	ld.global.f32 	%f166, [filter_width];
	.loc 1 167 66
	ld.global.u32 	%r71, [window_size+4];
	bra.uni 	BB2_4;
}

.visible .entry _Z23zp_zero_scatter_buffersv(

)
{
	.reg .s32 	%r<21>;


	.loc 1 182 1
	cvta.global.u32 	%r2, weighted_scatter_sums;
	mov.u32 	%r12, 4;
	mov.u32 	%r11, 2;
	mov.u32 	%r16, 0;
	.loc 1 182 1
	ld.global.v2.u32 	{%r17, %r18}, [launch_index];
	.loc 5 120 1
	// inline asm
	call (%r1), _rt_buffer_get, (%r2, %r11, %r12, %r17, %r18, %r16, %r16);
	// inline asm
	.loc 1 182 4
	st.u32 	[%r1], %r16;
	.loc 1 183 1
	cvta.global.u32 	%r10, filter_weights;
	ld.global.v2.u32 	{%r19, %r20}, [launch_index];
	.loc 5 120 1
	// inline asm
	call (%r9), _rt_buffer_get, (%r10, %r11, %r12, %r19, %r20, %r16, %r16);
	// inline asm
	.loc 1 183 4
	st.u32 	[%r9], %r16;
	.loc 1 184 2
	ret;
}

.visible .entry _Z18zp_scatter_samplesv(

)
{
	.reg .pred 	%p<47>;
	.reg .s32 	%r<108>;
	.reg .f32 	%f<318>;
	.reg .s64 	%rd<3>;


	.loc 1 234 1
	ldu.global.u32 	%r103, [sqrt_samples_per_pixel];
	setp.eq.s32	%p3, %r103, 0;
	@%p3 bra 	BB4_42;

	.loc 1 223 1
	cvta.global.u32 	%r2, weighted_scatter_sums;
	.loc 1 224 1
	cvta.global.u32 	%r3, filter_weights;
	mov.u32 	%r96, 0;

BB4_2:
	.loc 1 235 1
	mov.u32 	%r98, %r103;
	mov.u32 	%r102, %r98;
	setp.eq.s32	%p4, %r102, 0;
	@%p4 bra 	BB4_41;

	mov.u32 	%r104, 0;
	mov.u32 	%r101, %r102;

BB4_4:
	.loc 1 236 1
	mov.u32 	%r6, %r101;
	ld.global.v2.u32 	{%r33, %r34}, [launch_index];
	mad.lo.s32 	%r36, %r6, %r33, %r96;
	mad.lo.s32 	%r38, %r34, %r6, %r104;
	.loc 1 88 1
	cvt.rn.f32.u32	%f56, %r36;
	add.ftz.f32 	%f57, %f56, 0f3F000000;
	cvt.rn.f32.u32	%f58, %r6;
	.loc 2 3606 10
	div.approx.ftz.f32 	%f1, %f57, %f58;
	.loc 1 88 65
	cvt.rn.f32.u32	%f59, %r38;
	add.ftz.f32 	%f60, %f59, 0f3F000000;
	.loc 2 3606 10
	div.approx.ftz.f32 	%f2, %f60, %f58;
	.loc 1 72 1
	ld.global.u32 	%r8, [render_type];
	setp.eq.s32	%p5, %r8, 0;
	@%p5 bra 	BB4_8;

	.loc 1 74 1
	setp.eq.s32	%p6, %r8, 1;
	@%p6 bra 	BB4_7;

	mov.f32 	%f308, 0f00000000;
	bra.uni 	BB4_9;

BB4_7:
	.loc 1 61 1
	ld.global.f32 	%f62, [checkerboard_rotate];
	mul.ftz.f32 	%f63, %f62, 0f40490FDB;
	mov.f32 	%f64, 0f43340000;
	.loc 2 3606 10
	div.approx.ftz.f32 	%f65, %f63, %f64;
	.loc 3 8366 10
	cos.approx.ftz.f32 	%f66, %f65;
	.loc 3 8357 10
	sin.approx.ftz.f32 	%f67, %f65;
	.loc 1 63 1
	mul.ftz.f32 	%f68, %f67, %f2;
	fma.rn.ftz.f32 	%f69, %f66, %f1, %f68;
	ld.global.u32 	%r39, [checkerboard_width];
	cvt.rn.f32.s32	%f70, %r39;
	.loc 2 3606 10
	div.approx.ftz.f32 	%f71, %f69, %f70;
	.loc 2 2740 10
	cvt.rmi.ftz.f32.f32	%f72, %f71;
	.loc 2 3251 10
	cvt.rzi.ftz.s32.f32	%r40, %f72;
	.loc 2 2716 10
	abs.s32 	%r41, %r40;
	.loc 1 64 1
	mul.ftz.f32 	%f73, %f66, %f2;
	mul.ftz.f32 	%f74, %f67, %f1;
	sub.ftz.f32 	%f75, %f73, %f74;
	.loc 2 3606 10
	div.approx.ftz.f32 	%f76, %f75, %f70;
	.loc 2 2740 10
	cvt.rmi.ftz.f32.f32	%f77, %f76;
	.loc 2 3251 10
	cvt.rzi.ftz.s32.f32	%r42, %f77;
	.loc 2 2716 10
	abs.s32 	%r43, %r42;
	.loc 1 66 1
	shr.u32 	%r44, %r41, 31;
	add.s32 	%r45, %r41, %r44;
	and.b32  	%r46, %r45, -2;
	sub.s32 	%r47, %r41, %r46;
	shr.u32 	%r48, %r43, 31;
	add.s32 	%r49, %r43, %r48;
	and.b32  	%r50, %r49, -2;
	sub.s32 	%r51, %r43, %r50;
	setp.eq.s32	%p7, %r47, %r51;
	selp.f32	%f308, 0f3F800000, 0f00000000, %p7;
	bra.uni 	BB4_9;

BB4_8:
	.loc 1 52 1
	ld.global.v2.u32 	{%r52, %r53}, [window_size];
	.loc 1 53 1
	cvt.rn.f32.u32	%f78, %r52;
	cvt.rn.f32.u32	%f79, %r53;
	.loc 2 3606 10
	div.approx.ftz.f32 	%f80, %f1, %f78;
	div.approx.ftz.f32 	%f81, %f2, %f79;
	.loc 1 54 1
	mul.ftz.f32 	%f82, %f81, %f81;
	fma.rn.ftz.f32 	%f83, %f80, %f80, %f82;
	.loc 2 3055 10
	sqrt.approx.ftz.f32 	%f84, %f83;
	.loc 1 55 1
	mul.ftz.f32 	%f85, %f84, 0f44FA0000;
	mul.ftz.f32 	%f86, %f85, %f84;
	.loc 3 8366 10
	cos.approx.ftz.f32 	%f87, %f86;
	.loc 1 55 152
	add.ftz.f32 	%f88, %f87, 0f3F800000;
	mov.f32 	%f89, 0f40000000;
	.loc 2 3606 10
	div.approx.ftz.f32 	%f308, %f88, %f89;

BB4_9:
	.loc 1 191 1
	ld.global.f32 	%f313, [filter_width];
	.loc 2 2740 10
	cvt.rmi.ftz.f32.f32	%f7, %f1;
	.loc 1 196 82
	setp.neu.ftz.f32	%p8, %f7, %f1;
	@%p8 bra 	BB4_11;

	mov.pred 	%p46, -1;
	bra.uni 	BB4_12;

BB4_11:
	.loc 2 2740 10
	cvt.rmi.ftz.f32.f32	%f90, %f2;
	.loc 1 196 116
	setp.eq.ftz.f32	%p46, %f90, %f2;

BB4_12:
	setp.gt.ftz.f32	%p10, %f313, 0f3F000000;
	.loc 1 198 1
	or.pred  	%p11, %p10, %p46;
	@%p11 bra 	BB4_43;

	.loc 2 3272 10
	cvt.rzi.ftz.u32.f32	%r9, %f7;
	.loc 2 2740 10
	cvt.rmi.ftz.f32.f32	%f91, %f2;
	.loc 2 3272 10
	cvt.rzi.ftz.u32.f32	%r10, %f91;
	.loc 1 130 1
	cvt.rn.f32.u32	%f92, %r9;
	add.ftz.f32 	%f93, %f92, 0f3F000000;
	sub.ftz.f32 	%f94, %f1, %f93;
	.loc 2 2750 10
	abs.ftz.f32 	%f8, %f94;
	.loc 1 131 1
	cvt.rn.f32.u32	%f95, %r10;
	add.ftz.f32 	%f96, %f95, 0f3F000000;
	sub.ftz.f32 	%f97, %f2, %f96;
	.loc 2 2750 10
	abs.ftz.f32 	%f9, %f97;
	.loc 1 133 1
	setp.gt.ftz.f32	%p12, %f8, %f313;
	setp.gt.ftz.f32	%p13, %f9, %f313;
	or.pred  	%p14, %p12, %p13;
	@!%p14 bra 	BB4_15;
	bra.uni 	BB4_14;

BB4_14:
	mov.f32 	%f312, 0f00000000;
	bra.uni 	BB4_39;

BB4_15:
	.loc 1 137 1
	ld.global.u32 	%r11, [filter_type];
	setp.ne.s32	%p15, %r11, 0;
	.loc 1 151 1
	mov.f32 	%f312, 0f3F800000;
	.loc 1 137 1
	@%p15 bra 	BB4_16;
	bra.uni 	BB4_39;

BB4_16:
	setp.eq.s32	%p16, %r11, 1;
	@%p16 bra 	BB4_38;

	setp.eq.s32	%p17, %r11, 2;
	@%p17 bra 	BB4_37;

	setp.eq.s32	%p18, %r11, 3;
	@%p18 bra 	BB4_30;

	setp.eq.s32	%p19, %r11, 4;
	@%p19 bra 	BB4_20;
	bra.uni 	BB4_39;

BB4_20:
	.loc 2 3606 10
	div.approx.ftz.f32 	%f10, %f8, %f313;
	.loc 1 117 1
	setp.geu.ftz.f32	%p20, %f10, 0f3727C5AC;
	@%p20 bra 	BB4_22;

	mov.f32 	%f309, 0f3F800000;
	bra.uni 	BB4_25;

BB4_22:
	.loc 1 118 1
	setp.leu.ftz.f32	%p21, %f10, 0f3F800000;
	@%p21 bra 	BB4_24;

	mov.f32 	%f309, 0f00000000;
	bra.uni 	BB4_25;

BB4_24:
	.loc 1 119 1
	mul.ftz.f32 	%f99, %f10, 0f40490FDB;
	.loc 1 120 1
	ld.global.f32 	%f100, [sinc_tau];
	mul.ftz.f32 	%f101, %f99, %f100;
	.loc 3 8357 10
	sin.approx.ftz.f32 	%f102, %f101;
	.loc 2 3606 10
	div.approx.ftz.f32 	%f103, %f102, %f101;
	.loc 3 8357 10
	sin.approx.ftz.f32 	%f104, %f99;
	.loc 2 3606 10
	div.approx.ftz.f32 	%f105, %f104, %f99;
	.loc 1 122 1
	mul.ftz.f32 	%f309, %f103, %f105;

BB4_25:
	.loc 2 3606 10
	div.approx.ftz.f32 	%f13, %f9, %f313;
	.loc 1 117 1
	setp.geu.ftz.f32	%p22, %f13, 0f3727C5AC;
	@%p22 bra 	BB4_27;

	mov.f32 	%f116, 0f3F800000;
	.loc 1 148 189
	mul.ftz.f32 	%f312, %f309, %f116;
	bra.uni 	BB4_39;

BB4_27:
	.loc 1 118 1
	setp.leu.ftz.f32	%p23, %f13, 0f3F800000;
	@%p23 bra 	BB4_29;

	mov.f32 	%f115, 0f00000000;
	.loc 1 148 189
	mul.ftz.f32 	%f312, %f309, %f115;
	bra.uni 	BB4_39;

BB4_29:
	.loc 1 119 1
	mul.ftz.f32 	%f108, %f13, 0f40490FDB;
	.loc 1 120 1
	ld.global.f32 	%f109, [sinc_tau];
	mul.ftz.f32 	%f110, %f108, %f109;
	.loc 3 8357 10
	sin.approx.ftz.f32 	%f111, %f110;
	.loc 2 3606 10
	div.approx.ftz.f32 	%f112, %f111, %f110;
	.loc 3 8357 10
	sin.approx.ftz.f32 	%f113, %f108;
	.loc 2 3606 10
	div.approx.ftz.f32 	%f114, %f113, %f108;
	.loc 1 122 1
	mul.ftz.f32 	%f14, %f112, %f114;
	.loc 1 148 189
	mul.ftz.f32 	%f312, %f309, %f14;
	bra.uni 	BB4_39;

BB4_30:
	.loc 2 3606 10
	div.approx.ftz.f32 	%f17, %f8, %f313;
	.loc 1 107 1
	setp.gt.ftz.f32	%p24, %f17, 0f3F800000;
	@%p24 bra 	BB4_32;

	mov.f32 	%f117, 0f41400000;
	.loc 1 111 1
	sub.ftz.f32 	%f118, %f117, 0f40400000;
	add.ftz.f32 	%f119, %f118, 0fC0000000;
	mul.ftz.f32 	%f120, %f119, %f17;
	mul.ftz.f32 	%f121, %f120, %f17;
	mul.ftz.f32 	%f122, %f17, 0fC1400000;
	mul.ftz.f32 	%f123, %f122, %f17;
	fma.rn.ftz.f32 	%f124, %f121, %f17, %f123;
	mov.f32 	%f125, 0f40C00000;
	.loc 1 111 1
	sub.ftz.f32 	%f126, %f125, 0f3F2AAAAB;
	add.ftz.f32 	%f310, %f124, %f126;
	bra.uni 	BB4_33;

BB4_32:
	mov.f32 	%f127, 0fBEAAAAAB;
	.loc 1 108 1
	sub.ftz.f32 	%f128, %f127, 0f40000000;
	mul.ftz.f32 	%f129, %f128, %f17;
	mul.ftz.f32 	%f130, %f129, %f17;
	mul.ftz.f32 	%f131, %f17, 0f41400000;
	mul.ftz.f32 	%f132, %f131, %f17;
	fma.rn.ftz.f32 	%f133, %f130, %f17, %f132;
	mov.f32 	%f134, 0fC0800000;
	.loc 1 108 1
	sub.ftz.f32 	%f135, %f134, 0f41800000;
	fma.rn.ftz.f32 	%f136, %f135, %f17, %f133;
	add.ftz.f32 	%f310, %f136, 0f412AAAAB;

BB4_33:
	.loc 1 111 1
	mul.ftz.f32 	%f21, %f310, 0f3E2AAAAB;
	.loc 2 3606 10
	div.approx.ftz.f32 	%f22, %f9, %f313;
	.loc 1 107 1
	setp.gt.ftz.f32	%p25, %f22, 0f3F800000;
	@%p25 bra 	BB4_35;

	mov.f32 	%f137, 0f41400000;
	.loc 1 111 1
	sub.ftz.f32 	%f138, %f137, 0f40400000;
	add.ftz.f32 	%f139, %f138, 0fC0000000;
	mul.ftz.f32 	%f140, %f139, %f22;
	mul.ftz.f32 	%f141, %f140, %f22;
	mul.ftz.f32 	%f142, %f22, 0fC1400000;
	mul.ftz.f32 	%f143, %f142, %f22;
	fma.rn.ftz.f32 	%f144, %f141, %f22, %f143;
	mov.f32 	%f145, 0f40C00000;
	.loc 1 111 1
	sub.ftz.f32 	%f146, %f145, 0f3F2AAAAB;
	add.ftz.f32 	%f311, %f144, %f146;
	bra.uni 	BB4_36;

BB4_35:
	mov.f32 	%f147, 0fBEAAAAAB;
	.loc 1 108 1
	sub.ftz.f32 	%f148, %f147, 0f40000000;
	mul.ftz.f32 	%f149, %f148, %f22;
	mul.ftz.f32 	%f150, %f149, %f22;
	mul.ftz.f32 	%f151, %f22, 0f41400000;
	mul.ftz.f32 	%f152, %f151, %f22;
	fma.rn.ftz.f32 	%f153, %f150, %f22, %f152;
	mov.f32 	%f154, 0fC0800000;
	.loc 1 108 1
	sub.ftz.f32 	%f155, %f154, 0f41800000;
	fma.rn.ftz.f32 	%f156, %f155, %f22, %f153;
	add.ftz.f32 	%f311, %f156, 0f412AAAAB;

BB4_36:
	.loc 1 111 1
	mul.ftz.f32 	%f157, %f311, 0f3E2AAAAB;
	.loc 1 146 194
	mul.ftz.f32 	%f312, %f21, %f157;
	bra.uni 	BB4_39;

BB4_37:
	.loc 1 143 1
	ld.global.f32 	%f158, [gaussian_alpha];
	neg.ftz.f32 	%f159, %f158;
	mul.ftz.f32 	%f160, %f313, %f159;
	mul.ftz.f32 	%f161, %f160, %f313;
	.loc 3 8417 10
	mul.ftz.f32 	%f162, %f161, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f163, %f162;
	.loc 1 144 1
	mul.ftz.f32 	%f164, %f8, %f159;
	mul.ftz.f32 	%f165, %f164, %f8;
	.loc 3 8417 10
	mul.ftz.f32 	%f166, %f165, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f167, %f166;
	.loc 1 144 21
	sub.ftz.f32 	%f168, %f167, %f163;
	mov.f32 	%f169, 0f00000000;
	.loc 2 2770 10
	max.ftz.f32 	%f170, %f169, %f168;
	.loc 1 144 188
	mul.ftz.f32 	%f171, %f9, %f159;
	mul.ftz.f32 	%f172, %f171, %f9;
	.loc 3 8417 10
	mul.ftz.f32 	%f173, %f172, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f174, %f173;
	.loc 1 144 227
	sub.ftz.f32 	%f175, %f174, %f163;
	.loc 2 2770 10
	max.ftz.f32 	%f176, %f169, %f175;
	mul.ftz.f32 	%f312, %f170, %f176;
	bra.uni 	BB4_39;

BB4_38:
	.loc 1 141 1
	sub.ftz.f32 	%f177, %f313, %f8;
	mov.f32 	%f178, 0f00000000;
	.loc 2 2770 10
	max.ftz.f32 	%f179, %f178, %f177;
	.loc 1 141 79
	sub.ftz.f32 	%f180, %f313, %f9;
	.loc 2 2770 10
	max.ftz.f32 	%f181, %f178, %f180;
	.loc 1 141 176
	mul.ftz.f32 	%f312, %f179, %f181;

BB4_39:
	mov.u32 	%r66, 2;
	mov.u32 	%r67, 4;
	mov.u32 	%r71, 0;
	.loc 5 120 1
	// inline asm
	call (%r56), _rt_buffer_get, (%r2, %r66, %r67, %r9, %r10, %r71, %r71);
	// inline asm
	.loc 1 203 4
	ld.f32 	%f184, [%r56];
	fma.rn.ftz.f32 	%f185, %f308, %f312, %f184;
	st.f32 	[%r56], %f185;
	.loc 5 120 1
	// inline asm
	call (%r64), _rt_buffer_get, (%r3, %r66, %r67, %r9, %r10, %r71, %r71);
	// inline asm
	.loc 1 204 4
	ld.f32 	%f186, [%r64];
	add.ftz.f32 	%f187, %f186, %f312;
	st.f32 	[%r64], %f187;

BB4_40:
	.loc 1 235 50
	add.s32 	%r104, %r104, 1;
	.loc 1 235 1
	ld.global.u32 	%r101, [sqrt_samples_per_pixel];
	setp.lt.u32	%p44, %r104, %r101;
	mov.u32 	%r102, %r101;
	@%p44 bra 	BB4_4;

BB4_41:
	.loc 1 234 50
	mov.u32 	%r103, %r102;
	add.s32 	%r96, %r96, 1;
	.loc 1 234 1
	setp.lt.u32	%p45, %r96, %r103;
	@%p45 bra 	BB4_2;

BB4_42:
	.loc 1 241 2
	ret;

BB4_43:
	.loc 1 208 1
	add.ftz.f32 	%f188, %f1, 0fBF000000;
	.loc 1 210 1
	sub.ftz.f32 	%f189, %f188, %f313;
	.loc 2 2815 10
	cvt.rpi.ftz.f32.f32	%f190, %f189;
	.loc 2 3251 10
	cvt.rzi.ftz.s32.f32	%r72, %f190;
	.loc 1 211 1
	add.ftz.f32 	%f191, %f188, %f313;
	.loc 2 2740 10
	cvt.rmi.ftz.f32.f32	%f192, %f191;
	.loc 2 3251 10
	cvt.rzi.ftz.s32.f32	%r73, %f192;
	.loc 1 209 1
	add.ftz.f32 	%f193, %f2, 0fBF000000;
	.loc 1 212 1
	sub.ftz.f32 	%f194, %f193, %f313;
	.loc 2 2815 10
	cvt.rpi.ftz.f32.f32	%f195, %f194;
	.loc 2 3251 10
	cvt.rzi.ftz.s32.f32	%r74, %f195;
	mov.u32 	%r75, 0;
	.loc 2 2642 10
	max.s32 	%r12, %r72, %r75;
	.loc 1 214 1
	ld.global.u64 	%rd1, [window_size];
	cvt.u32.u64	%r76, %rd1;
	add.s32 	%r77, %r76, -1;
	.loc 2 2626 10
	min.u32 	%r106, %r73, %r77;
	.loc 2 2642 10
	max.s32 	%r14, %r74, %r75;
	.loc 1 217 1
	setp.eq.s32	%p26, %r106, %r12;
	shr.u64 	%rd2, %rd1, 32;
	cvt.u32.u64	%r105, %rd2;
	.loc 1 217 1
	@%p26 bra 	BB4_40;

	neg.s32 	%r16, %r14;

BB4_45:
	mov.u32 	%r17, %r105;
	add.s32 	%r106, %r106, -1;
	.loc 1 218 1
	add.ftz.f32 	%f197, %f193, %f313;
	.loc 2 2740 10
	cvt.rmi.ftz.f32.f32	%f198, %f197;
	.loc 2 3251 10
	cvt.rzi.ftz.s32.f32	%r78, %f198;
	.loc 1 219 1
	add.s32 	%r79, %r17, -1;
	.loc 2 2626 10
	min.u32 	%r20, %r78, %r79;
	.loc 1 220 1
	setp.eq.s32	%p27, %r20, %r14;
	@%p27 bra 	BB4_75;

	.loc 1 130 1
	cvt.rn.f32.u32	%f199, %r106;
	add.ftz.f32 	%f200, %f199, 0f3F000000;
	sub.ftz.f32 	%f201, %f1, %f200;
	.loc 2 2750 10
	abs.ftz.f32 	%f31, %f201;
	.loc 1 220 1
	add.s32 	%r107, %r20, -1;

BB4_47:
	.loc 1 131 1
	add.s32 	%r23, %r16, %r107;
	cvt.rn.f32.u32	%f202, %r107;
	add.ftz.f32 	%f203, %f202, 0f3F000000;
	sub.ftz.f32 	%f204, %f2, %f203;
	.loc 2 2750 10
	abs.ftz.f32 	%f33, %f204;
	.loc 1 133 1
	setp.gt.ftz.f32	%p28, %f33, %f313;
	setp.gt.ftz.f32	%p29, %f31, %f313;
	or.pred  	%p30, %p29, %p28;
	@!%p30 bra 	BB4_49;
	bra.uni 	BB4_48;

BB4_48:
	mov.f32 	%f317, 0f00000000;
	bra.uni 	BB4_73;

BB4_49:
	.loc 1 137 1
	ld.global.u32 	%r24, [filter_type];
	setp.ne.s32	%p31, %r24, 0;
	.loc 1 151 1
	mov.f32 	%f317, 0f3F800000;
	.loc 1 137 1
	@%p31 bra 	BB4_50;
	bra.uni 	BB4_73;

BB4_50:
	setp.eq.s32	%p32, %r24, 1;
	@%p32 bra 	BB4_72;

	setp.eq.s32	%p33, %r24, 2;
	@%p33 bra 	BB4_71;

	setp.eq.s32	%p34, %r24, 3;
	@%p34 bra 	BB4_64;

	setp.eq.s32	%p35, %r24, 4;
	@%p35 bra 	BB4_54;
	bra.uni 	BB4_73;

BB4_54:
	.loc 2 3606 10
	div.approx.ftz.f32 	%f34, %f31, %f313;
	.loc 1 117 1
	setp.geu.ftz.f32	%p36, %f34, 0f3727C5AC;
	@%p36 bra 	BB4_56;

	mov.f32 	%f314, 0f3F800000;
	bra.uni 	BB4_59;

BB4_56:
	.loc 1 118 1
	setp.leu.ftz.f32	%p37, %f34, 0f3F800000;
	@%p37 bra 	BB4_58;

	mov.f32 	%f314, 0f00000000;
	bra.uni 	BB4_59;

BB4_58:
	.loc 1 119 1
	mul.ftz.f32 	%f206, %f34, 0f40490FDB;
	.loc 1 120 1
	ld.global.f32 	%f207, [sinc_tau];
	mul.ftz.f32 	%f208, %f206, %f207;
	.loc 3 8357 10
	sin.approx.ftz.f32 	%f209, %f208;
	.loc 2 3606 10
	div.approx.ftz.f32 	%f210, %f209, %f208;
	.loc 3 8357 10
	sin.approx.ftz.f32 	%f211, %f206;
	.loc 2 3606 10
	div.approx.ftz.f32 	%f212, %f211, %f206;
	.loc 1 122 1
	mul.ftz.f32 	%f314, %f210, %f212;

BB4_59:
	.loc 2 3606 10
	div.approx.ftz.f32 	%f37, %f33, %f313;
	.loc 1 117 1
	setp.geu.ftz.f32	%p38, %f37, 0f3727C5AC;
	@%p38 bra 	BB4_61;

	mov.f32 	%f223, 0f3F800000;
	.loc 1 148 189
	mul.ftz.f32 	%f317, %f314, %f223;
	bra.uni 	BB4_73;

BB4_61:
	.loc 1 118 1
	setp.leu.ftz.f32	%p39, %f37, 0f3F800000;
	@%p39 bra 	BB4_63;

	mov.f32 	%f222, 0f00000000;
	.loc 1 148 189
	mul.ftz.f32 	%f317, %f314, %f222;
	bra.uni 	BB4_73;

BB4_63:
	.loc 1 119 1
	mul.ftz.f32 	%f215, %f37, 0f40490FDB;
	.loc 1 120 1
	ld.global.f32 	%f216, [sinc_tau];
	mul.ftz.f32 	%f217, %f215, %f216;
	.loc 3 8357 10
	sin.approx.ftz.f32 	%f218, %f217;
	.loc 2 3606 10
	div.approx.ftz.f32 	%f219, %f218, %f217;
	.loc 3 8357 10
	sin.approx.ftz.f32 	%f220, %f215;
	.loc 2 3606 10
	div.approx.ftz.f32 	%f221, %f220, %f215;
	.loc 1 122 1
	mul.ftz.f32 	%f38, %f219, %f221;
	.loc 1 148 189
	mul.ftz.f32 	%f317, %f314, %f38;
	bra.uni 	BB4_73;

BB4_64:
	.loc 2 3606 10
	div.approx.ftz.f32 	%f41, %f31, %f313;
	.loc 1 107 1
	setp.gt.ftz.f32	%p40, %f41, 0f3F800000;
	@%p40 bra 	BB4_66;

	mov.f32 	%f224, 0f41400000;
	.loc 1 111 1
	sub.ftz.f32 	%f225, %f224, 0f40400000;
	add.ftz.f32 	%f226, %f225, 0fC0000000;
	mul.ftz.f32 	%f227, %f226, %f41;
	mul.ftz.f32 	%f228, %f227, %f41;
	mul.ftz.f32 	%f229, %f41, 0fC1400000;
	mul.ftz.f32 	%f230, %f229, %f41;
	fma.rn.ftz.f32 	%f231, %f228, %f41, %f230;
	mov.f32 	%f232, 0f40C00000;
	.loc 1 111 1
	sub.ftz.f32 	%f233, %f232, 0f3F2AAAAB;
	add.ftz.f32 	%f315, %f231, %f233;
	bra.uni 	BB4_67;

BB4_66:
	mov.f32 	%f234, 0fBEAAAAAB;
	.loc 1 108 1
	sub.ftz.f32 	%f235, %f234, 0f40000000;
	mul.ftz.f32 	%f236, %f235, %f41;
	mul.ftz.f32 	%f237, %f236, %f41;
	mul.ftz.f32 	%f238, %f41, 0f41400000;
	mul.ftz.f32 	%f239, %f238, %f41;
	fma.rn.ftz.f32 	%f240, %f237, %f41, %f239;
	mov.f32 	%f241, 0fC0800000;
	.loc 1 108 1
	sub.ftz.f32 	%f242, %f241, 0f41800000;
	fma.rn.ftz.f32 	%f243, %f242, %f41, %f240;
	add.ftz.f32 	%f315, %f243, 0f412AAAAB;

BB4_67:
	.loc 1 111 1
	mul.ftz.f32 	%f45, %f315, 0f3E2AAAAB;
	.loc 2 3606 10
	div.approx.ftz.f32 	%f46, %f33, %f313;
	.loc 1 107 1
	setp.gt.ftz.f32	%p41, %f46, 0f3F800000;
	@%p41 bra 	BB4_69;

	mov.f32 	%f244, 0f41400000;
	.loc 1 111 1
	sub.ftz.f32 	%f245, %f244, 0f40400000;
	add.ftz.f32 	%f246, %f245, 0fC0000000;
	mul.ftz.f32 	%f247, %f246, %f46;
	mul.ftz.f32 	%f248, %f247, %f46;
	mul.ftz.f32 	%f249, %f46, 0fC1400000;
	mul.ftz.f32 	%f250, %f249, %f46;
	fma.rn.ftz.f32 	%f251, %f248, %f46, %f250;
	mov.f32 	%f252, 0f40C00000;
	.loc 1 111 1
	sub.ftz.f32 	%f253, %f252, 0f3F2AAAAB;
	add.ftz.f32 	%f316, %f251, %f253;
	bra.uni 	BB4_70;

BB4_69:
	mov.f32 	%f254, 0fBEAAAAAB;
	.loc 1 108 1
	sub.ftz.f32 	%f255, %f254, 0f40000000;
	mul.ftz.f32 	%f256, %f255, %f46;
	mul.ftz.f32 	%f257, %f256, %f46;
	mul.ftz.f32 	%f258, %f46, 0f41400000;
	mul.ftz.f32 	%f259, %f258, %f46;
	fma.rn.ftz.f32 	%f260, %f257, %f46, %f259;
	mov.f32 	%f261, 0fC0800000;
	.loc 1 108 1
	sub.ftz.f32 	%f262, %f261, 0f41800000;
	fma.rn.ftz.f32 	%f263, %f262, %f46, %f260;
	add.ftz.f32 	%f316, %f263, 0f412AAAAB;

BB4_70:
	.loc 1 111 1
	mul.ftz.f32 	%f264, %f316, 0f3E2AAAAB;
	.loc 1 146 194
	mul.ftz.f32 	%f317, %f45, %f264;
	bra.uni 	BB4_73;

BB4_71:
	.loc 1 143 1
	ld.global.f32 	%f265, [gaussian_alpha];
	neg.ftz.f32 	%f266, %f265;
	mul.ftz.f32 	%f267, %f313, %f266;
	mul.ftz.f32 	%f268, %f267, %f313;
	.loc 3 8417 10
	mul.ftz.f32 	%f269, %f268, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f270, %f269;
	.loc 1 144 1
	mul.ftz.f32 	%f271, %f31, %f266;
	mul.ftz.f32 	%f272, %f271, %f31;
	.loc 3 8417 10
	mul.ftz.f32 	%f273, %f272, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f274, %f273;
	.loc 1 144 21
	sub.ftz.f32 	%f275, %f274, %f270;
	mov.f32 	%f276, 0f00000000;
	.loc 2 2770 10
	max.ftz.f32 	%f277, %f276, %f275;
	.loc 1 144 188
	mul.ftz.f32 	%f278, %f33, %f266;
	mul.ftz.f32 	%f279, %f278, %f33;
	.loc 3 8417 10
	mul.ftz.f32 	%f280, %f279, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f281, %f280;
	.loc 1 144 227
	sub.ftz.f32 	%f282, %f281, %f270;
	.loc 2 2770 10
	max.ftz.f32 	%f283, %f276, %f282;
	mul.ftz.f32 	%f317, %f277, %f283;
	bra.uni 	BB4_73;

BB4_72:
	.loc 1 141 1
	sub.ftz.f32 	%f284, %f313, %f31;
	mov.f32 	%f285, 0f00000000;
	.loc 2 2770 10
	max.ftz.f32 	%f286, %f285, %f284;
	.loc 1 141 79
	sub.ftz.f32 	%f287, %f313, %f33;
	.loc 2 2770 10
	max.ftz.f32 	%f288, %f285, %f287;
	.loc 1 141 176
	mul.ftz.f32 	%f317, %f286, %f288;

BB4_73:
	mov.u32 	%r90, 2;
	mov.u32 	%r91, 4;
	.loc 5 120 1
	// inline asm
	call (%r80), _rt_buffer_get, (%r2, %r90, %r91, %r106, %r107, %r75, %r75);
	// inline asm
	.loc 1 223 88
	mul.ftz.f32 	%f291, %f308, %f317;
	.loc 2 3725 3
	atom.add.f32 	%f292, [%r80], %f291;
	.loc 5 120 1
	// inline asm
	call (%r88), _rt_buffer_get, (%r3, %r90, %r91, %r106, %r107, %r75, %r75);
	// inline asm
	.loc 2 3725 3
	atom.add.f32 	%f293, [%r88], %f317;
	.loc 1 220 1
	setp.eq.s32	%p42, %r23, 0;
	@%p42 bra 	BB4_75;

	.loc 1 133 1
	ld.global.f32 	%f313, [filter_width];
	.loc 1 220 1
	add.s32 	%r107, %r107, -1;
	bra.uni 	BB4_47;

BB4_75:
	.loc 1 217 1
	setp.eq.s32	%p43, %r106, %r12;
	@%p43 bra 	BB4_40;

	.loc 1 218 1
	ld.global.f32 	%f313, [filter_width];
	.loc 1 219 1
	ld.global.u32 	%r105, [window_size+4];
	bra.uni 	BB4_45;
}

.visible .entry _Z20zp_scatter_do_dividev(

)
{
	.reg .s16 	%rs<3>;
	.reg .s32 	%r<32>;
	.reg .f32 	%f<6>;


	.loc 1 244 1
	cvta.global.u32 	%r2, output_color_only;
	mov.u32 	%r20, 4;
	mov.u32 	%r19, 2;
	mov.u32 	%r24, 0;
	.loc 1 244 1
	ld.global.v2.u32 	{%r25, %r26}, [launch_index];
	.loc 5 120 1
	// inline asm
	call (%r1), _rt_buffer_get, (%r2, %r19, %r20, %r25, %r26, %r24, %r24);
	// inline asm
	.loc 1 244 4
	cvta.global.u32 	%r10, weighted_scatter_sums;
	ld.global.v2.u32 	{%r27, %r28}, [launch_index];
	.loc 5 120 1
	// inline asm
	call (%r9), _rt_buffer_get, (%r10, %r19, %r20, %r27, %r28, %r24, %r24);
	// inline asm
	.loc 1 244 170
	ld.f32 	%f1, [%r9];
	cvta.global.u32 	%r18, filter_weights;
	ld.global.v2.u32 	{%r29, %r30}, [launch_index];
	.loc 5 120 1
	// inline asm
	call (%r17), _rt_buffer_get, (%r18, %r19, %r20, %r29, %r30, %r24, %r24);
	// inline asm
	ld.f32 	%f2, [%r17];
	.loc 2 3606 10
	div.approx.ftz.f32 	%f3, %f1, %f2;
	.loc 2 2820 10
	cvt.ftz.sat.f32.f32	%f4, %f3;
	mul.ftz.f32 	%f5, %f4, 0f437FFD71;
	.loc 2 3272 10
	cvt.rzi.ftz.u32.f32	%r31, %f5;
	cvt.u16.u32	%rs1, %r31;
	mov.u16 	%rs2, 255;
	st.v4.u8 	[%r1], {%rs1, %rs1, %rs1, %rs2};
	.loc 1 245 2
	ret;
}

.visible .entry _Z26zp_find_contrast_locationsv(

)
{
	.reg .pred 	%p<7>;
	.reg .s16 	%rs<2>;
	.reg .s32 	%r<75>;
	.reg .f32 	%f<8>;
	.reg .s64 	%rd<3>;


	.loc 1 250 1
	ldu.global.u32 	%r69, [contrast_window_width];
	ldu.global.v2.u32 	{%r31, %r32}, [launch_index];
	sub.s32 	%r34, %r31, %r69;
	mov.u32 	%r74, 0;
	.loc 2 2642 10
	max.s32 	%r2, %r34, %r74;
	.loc 1 250 1
	mov.u32 	%r70, %r32;
	.loc 1 251 1
	sub.s32 	%r36, %r32, %r69;
	.loc 2 2642 10
	max.s32 	%r4, %r36, %r74;
	.loc 1 252 1
	add.s32 	%r37, %r69, %r31;
	ldu.global.u64 	%rd1, [window_size];
	cvt.u32.u64	%r38, %rd1;
	add.s32 	%r39, %r38, -1;
	.loc 2 2626 10
	min.u32 	%r71, %r37, %r39;
	shr.u64 	%rd2, %rd1, 32;
	cvt.u32.u64	%r68, %rd2;
	.loc 1 256 1
	setp.ne.s32	%p1, %r71, %r2;
	@%p1 bra 	BB6_4;

	mov.u32 	%r74, 0;
	mov.u32 	%r73, 255;

BB6_2:
	.loc 1 270 1
	setp.ne.s32	%p5, %r74, 0;
	@%p5 bra 	BB6_10;

	mov.f32 	%f7, 0f00000000;
	bra.uni 	BB6_11;

BB6_4:
	.loc 1 262 1
	cvta.global.u32 	%r7, output_color_only;
	.loc 1 256 1
	neg.s32 	%r8, %r4;
	mov.u32 	%r73, 255;

BB6_5:
	.loc 1 256 1
	mov.u32 	%r11, %r70;
	mov.u32 	%r10, %r69;
	mov.u32 	%r9, %r68;
	add.s32 	%r71, %r71, -1;
	.loc 1 258 1
	add.s32 	%r42, %r9, -1;
	add.s32 	%r43, %r10, %r11;
	.loc 2 2626 10
	min.u32 	%r16, %r43, %r42;
	.loc 1 259 1
	setp.eq.s32	%p2, %r16, %r4;
	@%p2 bra 	BB6_8;

	add.s32 	%r72, %r16, -1;

BB6_7:
	mov.u32 	%r46, 2;
	mov.u32 	%r47, 4;
	mov.u32 	%r51, 0;
	.loc 5 120 1
	// inline asm
	call (%r44), _rt_buffer_get, (%r7, %r46, %r47, %r71, %r72, %r51, %r51);
	// inline asm
	.loc 1 262 64
	ld.u8 	%r52, [%r44];
	.loc 2 2647 10
	max.u32 	%r74, %r74, %r52;
	.loc 2 2626 10
	min.u32 	%r73, %r73, %r52;
	.loc 1 259 1
	add.s32 	%r72, %r72, -1;
	add.s32 	%r53, %r8, %r72;
	setp.ne.s32	%p3, %r53, -1;
	@%p3 bra 	BB6_7;

BB6_8:
	.loc 1 256 1
	setp.eq.s32	%p4, %r71, %r2;
	@%p4 bra 	BB6_2;

	.loc 1 258 1
	ld.global.u32 	%r70, [launch_index+4];
	ld.global.u32 	%r69, [contrast_window_width];
	ld.global.u32 	%r68, [window_size+4];
	bra.uni 	BB6_5;

BB6_10:
	.loc 1 275 1
	sub.s32 	%r56, %r74, %r73;
	cvt.rn.f32.u32	%f3, %r56;
	add.s32 	%r57, %r73, %r74;
	cvt.rn.f32.u32	%f4, %r57;
	.loc 2 3606 10
	div.approx.ftz.f32 	%f7, %f3, %f4;

BB6_11:
	.loc 1 277 1
	ld.global.f32 	%f6, [adaptive_contrast_threshold];
	setp.ge.ftz.f32	%p6, %f7, %f6;
	selp.b16	%rs1, -1, 0, %p6;
	cvta.global.u32 	%r59, adaptive_sample_locations;
	mov.u32 	%r60, 2;
	mov.u32 	%r61, 1;
	mov.u32 	%r65, 0;
	.loc 1 277 1
	ld.global.v2.u32 	{%r66, %r67}, [launch_index];
	.loc 5 120 1
	// inline asm
	call (%r58), _rt_buffer_get, (%r59, %r60, %r61, %r66, %r67, %r65, %r65);
	// inline asm
	.loc 1 277 4
	st.u8 	[%r58], %rs1;
	.loc 1 278 2
	ret;
}

.visible .entry _Z37zp_coalesce_adaptive_sample_locationsv(

)
{



	.loc 1 281 2
	ret;
}

.visible .entry _Z20zp_adaptive_resamplev(

)
{
	.reg .pred 	%p<48>;
	.reg .s16 	%rs<2>;
	.reg .s32 	%r<118>;
	.reg .f32 	%f<318>;
	.reg .s64 	%rd<3>;


	.loc 1 284 1
	cvta.global.u32 	%r32, adaptive_sample_locations;
	mov.u32 	%r33, 2;
	mov.u32 	%r34, 1;
	mov.u32 	%r106, 0;
	.loc 1 284 1
	ld.global.v2.u32 	{%r39, %r40}, [launch_index];
	.loc 5 120 1
	// inline asm
	call (%r31), _rt_buffer_get, (%r32, %r33, %r34, %r39, %r40, %r106, %r106);
	// inline asm
	.loc 1 284 14
	ld.u8 	%rs1, [%r31];
	setp.eq.s16	%p3, %rs1, 0;
	@%p3 bra 	BB8_43;

	.loc 1 288 1
	ld.global.u32 	%r113, [sqrt_samples_per_pixel];
	setp.eq.s32	%p4, %r113, 0;
	@%p4 bra 	BB8_43;

	.loc 1 223 1
	cvta.global.u32 	%r2, weighted_scatter_sums;
	.loc 1 224 1
	cvta.global.u32 	%r3, filter_weights;

BB8_3:
	.loc 1 289 1
	mov.u32 	%r108, %r113;
	mov.u32 	%r112, %r108;
	setp.eq.s32	%p5, %r112, 0;
	@%p5 bra 	BB8_42;

	mov.u32 	%r114, 0;
	mov.u32 	%r111, %r112;

BB8_5:
	.loc 1 290 1
	mov.u32 	%r6, %r111;
	ld.global.v2.u32 	{%r43, %r44}, [launch_index];
	mad.lo.s32 	%r46, %r6, %r43, %r106;
	mad.lo.s32 	%r48, %r44, %r6, %r114;
	.loc 1 88 1
	cvt.rn.f32.u32	%f56, %r46;
	add.ftz.f32 	%f57, %f56, 0f3F000000;
	cvt.rn.f32.u32	%f58, %r6;
	.loc 2 3606 10
	div.approx.ftz.f32 	%f1, %f57, %f58;
	.loc 1 88 65
	cvt.rn.f32.u32	%f59, %r48;
	add.ftz.f32 	%f60, %f59, 0f3F000000;
	.loc 2 3606 10
	div.approx.ftz.f32 	%f2, %f60, %f58;
	.loc 1 72 1
	ld.global.u32 	%r8, [render_type];
	setp.eq.s32	%p6, %r8, 0;
	@%p6 bra 	BB8_9;

	.loc 1 74 1
	setp.eq.s32	%p7, %r8, 1;
	@%p7 bra 	BB8_8;

	mov.f32 	%f308, 0f00000000;
	bra.uni 	BB8_10;

BB8_8:
	.loc 1 61 1
	ld.global.f32 	%f62, [checkerboard_rotate];
	mul.ftz.f32 	%f63, %f62, 0f40490FDB;
	mov.f32 	%f64, 0f43340000;
	.loc 2 3606 10
	div.approx.ftz.f32 	%f65, %f63, %f64;
	.loc 3 8366 10
	cos.approx.ftz.f32 	%f66, %f65;
	.loc 3 8357 10
	sin.approx.ftz.f32 	%f67, %f65;
	.loc 1 63 1
	mul.ftz.f32 	%f68, %f67, %f2;
	fma.rn.ftz.f32 	%f69, %f66, %f1, %f68;
	ld.global.u32 	%r49, [checkerboard_width];
	cvt.rn.f32.s32	%f70, %r49;
	.loc 2 3606 10
	div.approx.ftz.f32 	%f71, %f69, %f70;
	.loc 2 2740 10
	cvt.rmi.ftz.f32.f32	%f72, %f71;
	.loc 2 3251 10
	cvt.rzi.ftz.s32.f32	%r50, %f72;
	.loc 2 2716 10
	abs.s32 	%r51, %r50;
	.loc 1 64 1
	mul.ftz.f32 	%f73, %f66, %f2;
	mul.ftz.f32 	%f74, %f67, %f1;
	sub.ftz.f32 	%f75, %f73, %f74;
	.loc 2 3606 10
	div.approx.ftz.f32 	%f76, %f75, %f70;
	.loc 2 2740 10
	cvt.rmi.ftz.f32.f32	%f77, %f76;
	.loc 2 3251 10
	cvt.rzi.ftz.s32.f32	%r52, %f77;
	.loc 2 2716 10
	abs.s32 	%r53, %r52;
	.loc 1 66 1
	shr.u32 	%r54, %r51, 31;
	add.s32 	%r55, %r51, %r54;
	and.b32  	%r56, %r55, -2;
	sub.s32 	%r57, %r51, %r56;
	shr.u32 	%r58, %r53, 31;
	add.s32 	%r59, %r53, %r58;
	and.b32  	%r60, %r59, -2;
	sub.s32 	%r61, %r53, %r60;
	setp.eq.s32	%p8, %r57, %r61;
	selp.f32	%f308, 0f3F800000, 0f00000000, %p8;
	bra.uni 	BB8_10;

BB8_9:
	.loc 1 52 1
	ld.global.v2.u32 	{%r62, %r63}, [window_size];
	.loc 1 53 1
	cvt.rn.f32.u32	%f78, %r62;
	cvt.rn.f32.u32	%f79, %r63;
	.loc 2 3606 10
	div.approx.ftz.f32 	%f80, %f1, %f78;
	div.approx.ftz.f32 	%f81, %f2, %f79;
	.loc 1 54 1
	mul.ftz.f32 	%f82, %f81, %f81;
	fma.rn.ftz.f32 	%f83, %f80, %f80, %f82;
	.loc 2 3055 10
	sqrt.approx.ftz.f32 	%f84, %f83;
	.loc 1 55 1
	mul.ftz.f32 	%f85, %f84, 0f44FA0000;
	mul.ftz.f32 	%f86, %f85, %f84;
	.loc 3 8366 10
	cos.approx.ftz.f32 	%f87, %f86;
	.loc 1 55 152
	add.ftz.f32 	%f88, %f87, 0f3F800000;
	mov.f32 	%f89, 0f40000000;
	.loc 2 3606 10
	div.approx.ftz.f32 	%f308, %f88, %f89;

BB8_10:
	.loc 1 191 1
	ld.global.f32 	%f313, [filter_width];
	.loc 2 2740 10
	cvt.rmi.ftz.f32.f32	%f7, %f1;
	.loc 1 196 82
	setp.neu.ftz.f32	%p9, %f7, %f1;
	@%p9 bra 	BB8_12;

	mov.pred 	%p47, -1;
	bra.uni 	BB8_13;

BB8_12:
	.loc 2 2740 10
	cvt.rmi.ftz.f32.f32	%f90, %f2;
	.loc 1 196 116
	setp.eq.ftz.f32	%p47, %f90, %f2;

BB8_13:
	setp.gt.ftz.f32	%p11, %f313, 0f3F000000;
	.loc 1 198 1
	or.pred  	%p12, %p11, %p47;
	@%p12 bra 	BB8_44;

	.loc 2 3272 10
	cvt.rzi.ftz.u32.f32	%r9, %f7;
	.loc 2 2740 10
	cvt.rmi.ftz.f32.f32	%f91, %f2;
	.loc 2 3272 10
	cvt.rzi.ftz.u32.f32	%r10, %f91;
	.loc 1 130 1
	cvt.rn.f32.u32	%f92, %r9;
	add.ftz.f32 	%f93, %f92, 0f3F000000;
	sub.ftz.f32 	%f94, %f1, %f93;
	.loc 2 2750 10
	abs.ftz.f32 	%f8, %f94;
	.loc 1 131 1
	cvt.rn.f32.u32	%f95, %r10;
	add.ftz.f32 	%f96, %f95, 0f3F000000;
	sub.ftz.f32 	%f97, %f2, %f96;
	.loc 2 2750 10
	abs.ftz.f32 	%f9, %f97;
	.loc 1 133 1
	setp.gt.ftz.f32	%p13, %f8, %f313;
	setp.gt.ftz.f32	%p14, %f9, %f313;
	or.pred  	%p15, %p13, %p14;
	@!%p15 bra 	BB8_16;
	bra.uni 	BB8_15;

BB8_15:
	mov.f32 	%f312, 0f00000000;
	bra.uni 	BB8_40;

BB8_16:
	.loc 1 137 1
	ld.global.u32 	%r11, [filter_type];
	setp.ne.s32	%p16, %r11, 0;
	.loc 1 151 1
	mov.f32 	%f312, 0f3F800000;
	.loc 1 137 1
	@%p16 bra 	BB8_17;
	bra.uni 	BB8_40;

BB8_17:
	setp.eq.s32	%p17, %r11, 1;
	@%p17 bra 	BB8_39;

	setp.eq.s32	%p18, %r11, 2;
	@%p18 bra 	BB8_38;

	setp.eq.s32	%p19, %r11, 3;
	@%p19 bra 	BB8_31;

	setp.eq.s32	%p20, %r11, 4;
	@%p20 bra 	BB8_21;
	bra.uni 	BB8_40;

BB8_21:
	.loc 2 3606 10
	div.approx.ftz.f32 	%f10, %f8, %f313;
	.loc 1 117 1
	setp.geu.ftz.f32	%p21, %f10, 0f3727C5AC;
	@%p21 bra 	BB8_23;

	mov.f32 	%f309, 0f3F800000;
	bra.uni 	BB8_26;

BB8_23:
	.loc 1 118 1
	setp.leu.ftz.f32	%p22, %f10, 0f3F800000;
	@%p22 bra 	BB8_25;

	mov.f32 	%f309, 0f00000000;
	bra.uni 	BB8_26;

BB8_25:
	.loc 1 119 1
	mul.ftz.f32 	%f99, %f10, 0f40490FDB;
	.loc 1 120 1
	ld.global.f32 	%f100, [sinc_tau];
	mul.ftz.f32 	%f101, %f99, %f100;
	.loc 3 8357 10
	sin.approx.ftz.f32 	%f102, %f101;
	.loc 2 3606 10
	div.approx.ftz.f32 	%f103, %f102, %f101;
	.loc 3 8357 10
	sin.approx.ftz.f32 	%f104, %f99;
	.loc 2 3606 10
	div.approx.ftz.f32 	%f105, %f104, %f99;
	.loc 1 122 1
	mul.ftz.f32 	%f309, %f103, %f105;

BB8_26:
	.loc 2 3606 10
	div.approx.ftz.f32 	%f13, %f9, %f313;
	.loc 1 117 1
	setp.geu.ftz.f32	%p23, %f13, 0f3727C5AC;
	@%p23 bra 	BB8_28;

	mov.f32 	%f116, 0f3F800000;
	.loc 1 148 189
	mul.ftz.f32 	%f312, %f309, %f116;
	bra.uni 	BB8_40;

BB8_28:
	.loc 1 118 1
	setp.leu.ftz.f32	%p24, %f13, 0f3F800000;
	@%p24 bra 	BB8_30;

	mov.f32 	%f115, 0f00000000;
	.loc 1 148 189
	mul.ftz.f32 	%f312, %f309, %f115;
	bra.uni 	BB8_40;

BB8_30:
	.loc 1 119 1
	mul.ftz.f32 	%f108, %f13, 0f40490FDB;
	.loc 1 120 1
	ld.global.f32 	%f109, [sinc_tau];
	mul.ftz.f32 	%f110, %f108, %f109;
	.loc 3 8357 10
	sin.approx.ftz.f32 	%f111, %f110;
	.loc 2 3606 10
	div.approx.ftz.f32 	%f112, %f111, %f110;
	.loc 3 8357 10
	sin.approx.ftz.f32 	%f113, %f108;
	.loc 2 3606 10
	div.approx.ftz.f32 	%f114, %f113, %f108;
	.loc 1 122 1
	mul.ftz.f32 	%f14, %f112, %f114;
	.loc 1 148 189
	mul.ftz.f32 	%f312, %f309, %f14;
	bra.uni 	BB8_40;

BB8_31:
	.loc 2 3606 10
	div.approx.ftz.f32 	%f17, %f8, %f313;
	.loc 1 107 1
	setp.gt.ftz.f32	%p25, %f17, 0f3F800000;
	@%p25 bra 	BB8_33;

	mov.f32 	%f117, 0f41400000;
	.loc 1 111 1
	sub.ftz.f32 	%f118, %f117, 0f40400000;
	add.ftz.f32 	%f119, %f118, 0fC0000000;
	mul.ftz.f32 	%f120, %f119, %f17;
	mul.ftz.f32 	%f121, %f120, %f17;
	mul.ftz.f32 	%f122, %f17, 0fC1400000;
	mul.ftz.f32 	%f123, %f122, %f17;
	fma.rn.ftz.f32 	%f124, %f121, %f17, %f123;
	mov.f32 	%f125, 0f40C00000;
	.loc 1 111 1
	sub.ftz.f32 	%f126, %f125, 0f3F2AAAAB;
	add.ftz.f32 	%f310, %f124, %f126;
	bra.uni 	BB8_34;

BB8_33:
	mov.f32 	%f127, 0fBEAAAAAB;
	.loc 1 108 1
	sub.ftz.f32 	%f128, %f127, 0f40000000;
	mul.ftz.f32 	%f129, %f128, %f17;
	mul.ftz.f32 	%f130, %f129, %f17;
	mul.ftz.f32 	%f131, %f17, 0f41400000;
	mul.ftz.f32 	%f132, %f131, %f17;
	fma.rn.ftz.f32 	%f133, %f130, %f17, %f132;
	mov.f32 	%f134, 0fC0800000;
	.loc 1 108 1
	sub.ftz.f32 	%f135, %f134, 0f41800000;
	fma.rn.ftz.f32 	%f136, %f135, %f17, %f133;
	add.ftz.f32 	%f310, %f136, 0f412AAAAB;

BB8_34:
	.loc 1 111 1
	mul.ftz.f32 	%f21, %f310, 0f3E2AAAAB;
	.loc 2 3606 10
	div.approx.ftz.f32 	%f22, %f9, %f313;
	.loc 1 107 1
	setp.gt.ftz.f32	%p26, %f22, 0f3F800000;
	@%p26 bra 	BB8_36;

	mov.f32 	%f137, 0f41400000;
	.loc 1 111 1
	sub.ftz.f32 	%f138, %f137, 0f40400000;
	add.ftz.f32 	%f139, %f138, 0fC0000000;
	mul.ftz.f32 	%f140, %f139, %f22;
	mul.ftz.f32 	%f141, %f140, %f22;
	mul.ftz.f32 	%f142, %f22, 0fC1400000;
	mul.ftz.f32 	%f143, %f142, %f22;
	fma.rn.ftz.f32 	%f144, %f141, %f22, %f143;
	mov.f32 	%f145, 0f40C00000;
	.loc 1 111 1
	sub.ftz.f32 	%f146, %f145, 0f3F2AAAAB;
	add.ftz.f32 	%f311, %f144, %f146;
	bra.uni 	BB8_37;

BB8_36:
	mov.f32 	%f147, 0fBEAAAAAB;
	.loc 1 108 1
	sub.ftz.f32 	%f148, %f147, 0f40000000;
	mul.ftz.f32 	%f149, %f148, %f22;
	mul.ftz.f32 	%f150, %f149, %f22;
	mul.ftz.f32 	%f151, %f22, 0f41400000;
	mul.ftz.f32 	%f152, %f151, %f22;
	fma.rn.ftz.f32 	%f153, %f150, %f22, %f152;
	mov.f32 	%f154, 0fC0800000;
	.loc 1 108 1
	sub.ftz.f32 	%f155, %f154, 0f41800000;
	fma.rn.ftz.f32 	%f156, %f155, %f22, %f153;
	add.ftz.f32 	%f311, %f156, 0f412AAAAB;

BB8_37:
	.loc 1 111 1
	mul.ftz.f32 	%f157, %f311, 0f3E2AAAAB;
	.loc 1 146 194
	mul.ftz.f32 	%f312, %f21, %f157;
	bra.uni 	BB8_40;

BB8_38:
	.loc 1 143 1
	ld.global.f32 	%f158, [gaussian_alpha];
	neg.ftz.f32 	%f159, %f158;
	mul.ftz.f32 	%f160, %f313, %f159;
	mul.ftz.f32 	%f161, %f160, %f313;
	.loc 3 8417 10
	mul.ftz.f32 	%f162, %f161, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f163, %f162;
	.loc 1 144 1
	mul.ftz.f32 	%f164, %f8, %f159;
	mul.ftz.f32 	%f165, %f164, %f8;
	.loc 3 8417 10
	mul.ftz.f32 	%f166, %f165, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f167, %f166;
	.loc 1 144 21
	sub.ftz.f32 	%f168, %f167, %f163;
	mov.f32 	%f169, 0f00000000;
	.loc 2 2770 10
	max.ftz.f32 	%f170, %f169, %f168;
	.loc 1 144 188
	mul.ftz.f32 	%f171, %f9, %f159;
	mul.ftz.f32 	%f172, %f171, %f9;
	.loc 3 8417 10
	mul.ftz.f32 	%f173, %f172, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f174, %f173;
	.loc 1 144 227
	sub.ftz.f32 	%f175, %f174, %f163;
	.loc 2 2770 10
	max.ftz.f32 	%f176, %f169, %f175;
	mul.ftz.f32 	%f312, %f170, %f176;
	bra.uni 	BB8_40;

BB8_39:
	.loc 1 141 1
	sub.ftz.f32 	%f177, %f313, %f8;
	mov.f32 	%f178, 0f00000000;
	.loc 2 2770 10
	max.ftz.f32 	%f179, %f178, %f177;
	.loc 1 141 79
	sub.ftz.f32 	%f180, %f313, %f9;
	.loc 2 2770 10
	max.ftz.f32 	%f181, %f178, %f180;
	.loc 1 141 176
	mul.ftz.f32 	%f312, %f179, %f181;

BB8_40:
	mov.u32 	%r77, 4;
	mov.u32 	%r81, 0;
	.loc 5 120 1
	// inline asm
	call (%r66), _rt_buffer_get, (%r2, %r33, %r77, %r9, %r10, %r81, %r81);
	// inline asm
	.loc 1 203 4
	ld.f32 	%f184, [%r66];
	fma.rn.ftz.f32 	%f185, %f308, %f312, %f184;
	st.f32 	[%r66], %f185;
	.loc 5 120 1
	// inline asm
	call (%r74), _rt_buffer_get, (%r3, %r33, %r77, %r9, %r10, %r81, %r81);
	// inline asm
	.loc 1 204 4
	ld.f32 	%f186, [%r74];
	add.ftz.f32 	%f187, %f186, %f312;
	st.f32 	[%r74], %f187;

BB8_41:
	.loc 1 289 50
	add.s32 	%r114, %r114, 1;
	.loc 1 289 1
	ld.global.u32 	%r111, [sqrt_samples_per_pixel];
	setp.lt.u32	%p45, %r114, %r111;
	mov.u32 	%r112, %r111;
	@%p45 bra 	BB8_5;

BB8_42:
	.loc 1 288 50
	mov.u32 	%r113, %r112;
	add.s32 	%r106, %r106, 1;
	.loc 1 288 1
	setp.lt.u32	%p46, %r106, %r113;
	@%p46 bra 	BB8_3;

BB8_43:
	.loc 1 295 2
	ret;

BB8_44:
	.loc 1 208 1
	add.ftz.f32 	%f188, %f1, 0fBF000000;
	.loc 1 210 1
	sub.ftz.f32 	%f189, %f188, %f313;
	.loc 2 2815 10
	cvt.rpi.ftz.f32.f32	%f190, %f189;
	.loc 2 3251 10
	cvt.rzi.ftz.s32.f32	%r82, %f190;
	.loc 1 211 1
	add.ftz.f32 	%f191, %f188, %f313;
	.loc 2 2740 10
	cvt.rmi.ftz.f32.f32	%f192, %f191;
	.loc 2 3251 10
	cvt.rzi.ftz.s32.f32	%r83, %f192;
	.loc 1 209 1
	add.ftz.f32 	%f193, %f2, 0fBF000000;
	.loc 1 212 1
	sub.ftz.f32 	%f194, %f193, %f313;
	.loc 2 2815 10
	cvt.rpi.ftz.f32.f32	%f195, %f194;
	.loc 2 3251 10
	cvt.rzi.ftz.s32.f32	%r84, %f195;
	mov.u32 	%r85, 0;
	.loc 2 2642 10
	max.s32 	%r12, %r82, %r85;
	.loc 1 214 1
	ld.global.u64 	%rd1, [window_size];
	cvt.u32.u64	%r86, %rd1;
	add.s32 	%r87, %r86, -1;
	.loc 2 2626 10
	min.u32 	%r116, %r83, %r87;
	.loc 2 2642 10
	max.s32 	%r14, %r84, %r85;
	.loc 1 217 1
	setp.eq.s32	%p27, %r116, %r12;
	shr.u64 	%rd2, %rd1, 32;
	cvt.u32.u64	%r115, %rd2;
	.loc 1 217 1
	@%p27 bra 	BB8_41;

	neg.s32 	%r16, %r14;

BB8_46:
	mov.u32 	%r17, %r115;
	add.s32 	%r116, %r116, -1;
	.loc 1 218 1
	add.ftz.f32 	%f197, %f193, %f313;
	.loc 2 2740 10
	cvt.rmi.ftz.f32.f32	%f198, %f197;
	.loc 2 3251 10
	cvt.rzi.ftz.s32.f32	%r88, %f198;
	.loc 1 219 1
	add.s32 	%r89, %r17, -1;
	.loc 2 2626 10
	min.u32 	%r20, %r88, %r89;
	.loc 1 220 1
	setp.eq.s32	%p28, %r20, %r14;
	@%p28 bra 	BB8_76;

	.loc 1 130 1
	cvt.rn.f32.u32	%f199, %r116;
	add.ftz.f32 	%f200, %f199, 0f3F000000;
	sub.ftz.f32 	%f201, %f1, %f200;
	.loc 2 2750 10
	abs.ftz.f32 	%f31, %f201;
	.loc 1 220 1
	add.s32 	%r117, %r20, -1;

BB8_48:
	.loc 1 131 1
	add.s32 	%r23, %r16, %r117;
	cvt.rn.f32.u32	%f202, %r117;
	add.ftz.f32 	%f203, %f202, 0f3F000000;
	sub.ftz.f32 	%f204, %f2, %f203;
	.loc 2 2750 10
	abs.ftz.f32 	%f33, %f204;
	.loc 1 133 1
	setp.gt.ftz.f32	%p29, %f33, %f313;
	setp.gt.ftz.f32	%p30, %f31, %f313;
	or.pred  	%p31, %p30, %p29;
	@!%p31 bra 	BB8_50;
	bra.uni 	BB8_49;

BB8_49:
	mov.f32 	%f317, 0f00000000;
	bra.uni 	BB8_74;

BB8_50:
	.loc 1 137 1
	ld.global.u32 	%r24, [filter_type];
	setp.ne.s32	%p32, %r24, 0;
	.loc 1 151 1
	mov.f32 	%f317, 0f3F800000;
	.loc 1 137 1
	@%p32 bra 	BB8_51;
	bra.uni 	BB8_74;

BB8_51:
	setp.eq.s32	%p33, %r24, 1;
	@%p33 bra 	BB8_73;

	setp.eq.s32	%p34, %r24, 2;
	@%p34 bra 	BB8_72;

	setp.eq.s32	%p35, %r24, 3;
	@%p35 bra 	BB8_65;

	setp.eq.s32	%p36, %r24, 4;
	@%p36 bra 	BB8_55;
	bra.uni 	BB8_74;

BB8_55:
	.loc 2 3606 10
	div.approx.ftz.f32 	%f34, %f31, %f313;
	.loc 1 117 1
	setp.geu.ftz.f32	%p37, %f34, 0f3727C5AC;
	@%p37 bra 	BB8_57;

	mov.f32 	%f314, 0f3F800000;
	bra.uni 	BB8_60;

BB8_57:
	.loc 1 118 1
	setp.leu.ftz.f32	%p38, %f34, 0f3F800000;
	@%p38 bra 	BB8_59;

	mov.f32 	%f314, 0f00000000;
	bra.uni 	BB8_60;

BB8_59:
	.loc 1 119 1
	mul.ftz.f32 	%f206, %f34, 0f40490FDB;
	.loc 1 120 1
	ld.global.f32 	%f207, [sinc_tau];
	mul.ftz.f32 	%f208, %f206, %f207;
	.loc 3 8357 10
	sin.approx.ftz.f32 	%f209, %f208;
	.loc 2 3606 10
	div.approx.ftz.f32 	%f210, %f209, %f208;
	.loc 3 8357 10
	sin.approx.ftz.f32 	%f211, %f206;
	.loc 2 3606 10
	div.approx.ftz.f32 	%f212, %f211, %f206;
	.loc 1 122 1
	mul.ftz.f32 	%f314, %f210, %f212;

BB8_60:
	.loc 2 3606 10
	div.approx.ftz.f32 	%f37, %f33, %f313;
	.loc 1 117 1
	setp.geu.ftz.f32	%p39, %f37, 0f3727C5AC;
	@%p39 bra 	BB8_62;

	mov.f32 	%f223, 0f3F800000;
	.loc 1 148 189
	mul.ftz.f32 	%f317, %f314, %f223;
	bra.uni 	BB8_74;

BB8_62:
	.loc 1 118 1
	setp.leu.ftz.f32	%p40, %f37, 0f3F800000;
	@%p40 bra 	BB8_64;

	mov.f32 	%f222, 0f00000000;
	.loc 1 148 189
	mul.ftz.f32 	%f317, %f314, %f222;
	bra.uni 	BB8_74;

BB8_64:
	.loc 1 119 1
	mul.ftz.f32 	%f215, %f37, 0f40490FDB;
	.loc 1 120 1
	ld.global.f32 	%f216, [sinc_tau];
	mul.ftz.f32 	%f217, %f215, %f216;
	.loc 3 8357 10
	sin.approx.ftz.f32 	%f218, %f217;
	.loc 2 3606 10
	div.approx.ftz.f32 	%f219, %f218, %f217;
	.loc 3 8357 10
	sin.approx.ftz.f32 	%f220, %f215;
	.loc 2 3606 10
	div.approx.ftz.f32 	%f221, %f220, %f215;
	.loc 1 122 1
	mul.ftz.f32 	%f38, %f219, %f221;
	.loc 1 148 189
	mul.ftz.f32 	%f317, %f314, %f38;
	bra.uni 	BB8_74;

BB8_65:
	.loc 2 3606 10
	div.approx.ftz.f32 	%f41, %f31, %f313;
	.loc 1 107 1
	setp.gt.ftz.f32	%p41, %f41, 0f3F800000;
	@%p41 bra 	BB8_67;

	mov.f32 	%f224, 0f41400000;
	.loc 1 111 1
	sub.ftz.f32 	%f225, %f224, 0f40400000;
	add.ftz.f32 	%f226, %f225, 0fC0000000;
	mul.ftz.f32 	%f227, %f226, %f41;
	mul.ftz.f32 	%f228, %f227, %f41;
	mul.ftz.f32 	%f229, %f41, 0fC1400000;
	mul.ftz.f32 	%f230, %f229, %f41;
	fma.rn.ftz.f32 	%f231, %f228, %f41, %f230;
	mov.f32 	%f232, 0f40C00000;
	.loc 1 111 1
	sub.ftz.f32 	%f233, %f232, 0f3F2AAAAB;
	add.ftz.f32 	%f315, %f231, %f233;
	bra.uni 	BB8_68;

BB8_67:
	mov.f32 	%f234, 0fBEAAAAAB;
	.loc 1 108 1
	sub.ftz.f32 	%f235, %f234, 0f40000000;
	mul.ftz.f32 	%f236, %f235, %f41;
	mul.ftz.f32 	%f237, %f236, %f41;
	mul.ftz.f32 	%f238, %f41, 0f41400000;
	mul.ftz.f32 	%f239, %f238, %f41;
	fma.rn.ftz.f32 	%f240, %f237, %f41, %f239;
	mov.f32 	%f241, 0fC0800000;
	.loc 1 108 1
	sub.ftz.f32 	%f242, %f241, 0f41800000;
	fma.rn.ftz.f32 	%f243, %f242, %f41, %f240;
	add.ftz.f32 	%f315, %f243, 0f412AAAAB;

BB8_68:
	.loc 1 111 1
	mul.ftz.f32 	%f45, %f315, 0f3E2AAAAB;
	.loc 2 3606 10
	div.approx.ftz.f32 	%f46, %f33, %f313;
	.loc 1 107 1
	setp.gt.ftz.f32	%p42, %f46, 0f3F800000;
	@%p42 bra 	BB8_70;

	mov.f32 	%f244, 0f41400000;
	.loc 1 111 1
	sub.ftz.f32 	%f245, %f244, 0f40400000;
	add.ftz.f32 	%f246, %f245, 0fC0000000;
	mul.ftz.f32 	%f247, %f246, %f46;
	mul.ftz.f32 	%f248, %f247, %f46;
	mul.ftz.f32 	%f249, %f46, 0fC1400000;
	mul.ftz.f32 	%f250, %f249, %f46;
	fma.rn.ftz.f32 	%f251, %f248, %f46, %f250;
	mov.f32 	%f252, 0f40C00000;
	.loc 1 111 1
	sub.ftz.f32 	%f253, %f252, 0f3F2AAAAB;
	add.ftz.f32 	%f316, %f251, %f253;
	bra.uni 	BB8_71;

BB8_70:
	mov.f32 	%f254, 0fBEAAAAAB;
	.loc 1 108 1
	sub.ftz.f32 	%f255, %f254, 0f40000000;
	mul.ftz.f32 	%f256, %f255, %f46;
	mul.ftz.f32 	%f257, %f256, %f46;
	mul.ftz.f32 	%f258, %f46, 0f41400000;
	mul.ftz.f32 	%f259, %f258, %f46;
	fma.rn.ftz.f32 	%f260, %f257, %f46, %f259;
	mov.f32 	%f261, 0fC0800000;
	.loc 1 108 1
	sub.ftz.f32 	%f262, %f261, 0f41800000;
	fma.rn.ftz.f32 	%f263, %f262, %f46, %f260;
	add.ftz.f32 	%f316, %f263, 0f412AAAAB;

BB8_71:
	.loc 1 111 1
	mul.ftz.f32 	%f264, %f316, 0f3E2AAAAB;
	.loc 1 146 194
	mul.ftz.f32 	%f317, %f45, %f264;
	bra.uni 	BB8_74;

BB8_72:
	.loc 1 143 1
	ld.global.f32 	%f265, [gaussian_alpha];
	neg.ftz.f32 	%f266, %f265;
	mul.ftz.f32 	%f267, %f313, %f266;
	mul.ftz.f32 	%f268, %f267, %f313;
	.loc 3 8417 10
	mul.ftz.f32 	%f269, %f268, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f270, %f269;
	.loc 1 144 1
	mul.ftz.f32 	%f271, %f31, %f266;
	mul.ftz.f32 	%f272, %f271, %f31;
	.loc 3 8417 10
	mul.ftz.f32 	%f273, %f272, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f274, %f273;
	.loc 1 144 21
	sub.ftz.f32 	%f275, %f274, %f270;
	mov.f32 	%f276, 0f00000000;
	.loc 2 2770 10
	max.ftz.f32 	%f277, %f276, %f275;
	.loc 1 144 188
	mul.ftz.f32 	%f278, %f33, %f266;
	mul.ftz.f32 	%f279, %f278, %f33;
	.loc 3 8417 10
	mul.ftz.f32 	%f280, %f279, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f281, %f280;
	.loc 1 144 227
	sub.ftz.f32 	%f282, %f281, %f270;
	.loc 2 2770 10
	max.ftz.f32 	%f283, %f276, %f282;
	mul.ftz.f32 	%f317, %f277, %f283;
	bra.uni 	BB8_74;

BB8_73:
	.loc 1 141 1
	sub.ftz.f32 	%f284, %f313, %f31;
	mov.f32 	%f285, 0f00000000;
	.loc 2 2770 10
	max.ftz.f32 	%f286, %f285, %f284;
	.loc 1 141 79
	sub.ftz.f32 	%f287, %f313, %f33;
	.loc 2 2770 10
	max.ftz.f32 	%f288, %f285, %f287;
	.loc 1 141 176
	mul.ftz.f32 	%f317, %f286, %f288;

BB8_74:
	mov.u32 	%r101, 4;
	.loc 5 120 1
	// inline asm
	call (%r90), _rt_buffer_get, (%r2, %r33, %r101, %r116, %r117, %r85, %r85);
	// inline asm
	.loc 1 223 88
	mul.ftz.f32 	%f291, %f308, %f317;
	.loc 2 3725 3
	atom.add.f32 	%f292, [%r90], %f291;
	.loc 5 120 1
	// inline asm
	call (%r98), _rt_buffer_get, (%r3, %r33, %r101, %r116, %r117, %r85, %r85);
	// inline asm
	.loc 2 3725 3
	atom.add.f32 	%f293, [%r98], %f317;
	.loc 1 220 1
	setp.eq.s32	%p43, %r23, 0;
	@%p43 bra 	BB8_76;

	.loc 1 133 1
	ld.global.f32 	%f313, [filter_width];
	.loc 1 220 1
	add.s32 	%r117, %r117, -1;
	bra.uni 	BB8_48;

BB8_76:
	.loc 1 217 1
	setp.eq.s32	%p44, %r116, %r12;
	@%p44 bra 	BB8_41;

	.loc 1 218 1
	ld.global.f32 	%f313, [filter_width];
	.loc 1 219 1
	ld.global.u32 	%r115, [window_size+4];
	bra.uni 	BB8_46;
}

.visible .entry _Z9exceptionv(

)
{
	.reg .pred 	%p<4>;
	.reg .s16 	%rs<2>;
	.reg .s32 	%r<35>;


	.loc 5 290 1
	// inline asm
	call (%r10), _rt_get_exception_code, ();
	// inline asm
	.loc 1 300 1
	cvta.global.u32 	%r2, $str;
	ld.global.v2.u32 	{%r13, %r14}, [launch_index];
	.loc 5 361 1
	// inline asm
	call (%r11), _rt_print_active, ();
	// inline asm
	.loc 4 1153 7
	setp.eq.s32	%p1, %r11, 0;
	.loc 1 300 1
	mov.u32 	%r34, $str;
	@%p1 bra 	BB9_5;

	mov.u32 	%r33, %r2;

BB9_2:
	.loc 5 316 1
	mov.u32 	%r6, %r34;
	mov.u32 	%r5, %r33;
	add.s32 	%r7, %r5, 1;
	add.s32 	%r34, %r6, 1;
	.loc 5 316 1
	ld.global.u8 	%rs1, [%r6+1];
	setp.ne.s16	%p2, %rs1, 0;
	mov.u32 	%r33, %r7;
	@%p2 bra 	BB9_2;

	mov.u32 	%r18, 32;
	.loc 5 317 1
	sub.s32 	%r19, %r18, %r2;
	.loc 4 1156 45
	add.s32 	%r20, %r19, %r7;
	and.b32  	%r17, %r20, -4;
	.loc 5 371 1
	// inline asm
	call (%r15), _rt_print_start, (%r2, %r17);
	// inline asm
	.loc 4 1157 50
	setp.eq.s32	%p3, %r15, 0;
	@%p3 bra 	BB9_5;

	mov.u32 	%r29, 0;
	.loc 5 341 1
	// inline asm
	call (), _rt_print_write32, (%r29, %r15);
	// inline asm
	.loc 5 347 1
	add.s32 	%r24, %r15, 4;
	.loc 5 349 1
	// inline asm
	call (), _rt_print_write32, (%r10, %r24);
	// inline asm
	.loc 4 1158 1
	add.s32 	%r26, %r15, 8;
	.loc 5 341 1
	// inline asm
	call (), _rt_print_write32, (%r29, %r26);
	// inline asm
	.loc 5 347 1
	add.s32 	%r28, %r15, 12;
	.loc 5 349 1
	// inline asm
	call (), _rt_print_write32, (%r13, %r28);
	// inline asm
	.loc 4 1159 1
	add.s32 	%r30, %r15, 16;
	.loc 5 341 1
	// inline asm
	call (), _rt_print_write32, (%r29, %r30);
	// inline asm
	.loc 5 347 1
	add.s32 	%r32, %r15, 20;
	.loc 5 349 1
	// inline asm
	call (), _rt_print_write32, (%r14, %r32);
	// inline asm

BB9_5:
	.loc 1 301 2
	ret;
}


